game:GetService("StarterGui"):SetCore("SendNotification", {
	Title = "Important";
	Text = "This script is currently still being built! So it may be buggy or brake on death,";
	Duration = 15;
	Icon = "rbxassetid://9417142960";
})
local NewestVersion = 0.1
local ScriptVersion = 0.1
game:GetService("StarterGui"):SetCore("SendNotification", {
	Title = "Script is loading..";
	Text = "Please wait..";
	Duration = 5;
	Button1 = "Alrighty";
	Icon = "rbxassetid://9417142960";
})

wait(wait(game:IsLoaded()))
wait(1)
local Player = game.Players.LocalPlayer
local Players = game.Players:GetPlayers()
local WorkspaceChildren = workspace:GetChildren()
local ReplicatedStorage = game.ReplicatedStorage
local UIS = game:GetService("UserInputService")
local Mouse = Player:GetMouse()
local WhileWaitEvent = Instance.new("BindableEvent", Player)
local TimeUsedScript = 0
local R15 = false
local Floating = false
local Flinging = false
local Following = true
local Tpwalking = false
local ChatBypass = false
local Nocliping = false
local FlyJumping = false
local Flying = false
local Funnying = false
local Funnying2 = false
local Funnying3 = false
local Funnying4 = false
local Spinning = false
local Tpwalking = false
local IsTyping = false
local spawnpos = nil

local cmds ={
	"ClientSided Commands:",
	"/e newestversion (Reconmended to use if version is old) {CLIENT}",
	"/e partxray {CLIENT}",
	"/e unpartxray {CLIENT}",
	"/e hideprints {CLIENT}",
	"/e clearprints {CLIENT}",
	"/e findWorkspace {CLIENT}",
	"/e funny {CLIENT}",
	"/e unfunny {CLIENT}",
	"/e funny2 {CLIENT}",
	"/e unfunny2 {CLIENT}",
	"/e funny3 [Number between 1-10000] {CLIENT}",
	"/e unfunny3 {CLIENT}",
	"/e bighead {CLIENT}",
	"/e smallhead {CLIENT}",
	"/e normalhead {CLIENT}",
	"/e removehats {CLIENT}",
	"/e restorehats {CLIENT}",
	"Shift+P [Enables freecam] {CLIENT}",
	"ServerSided Commands:",
	"/e fixgui (To position the ui if lost)",
	"/e float",
	"/e unfloat",
	"/e follow [Player name or display]",
	"/e unfollow",
	"/e followpart [Model name showed in workspace]",
	"/e unfollowpart",
	"/e noclip",
	"/e unnoclip",
	"/e sit",
	"/e to [Player name or display]",
	"/e speed [Number between 1-10000 (Defult 16)]",
	"/e jumppower [Number between 1-10000 (Defult 50)]",
	"/e flyjump",
	"/e unflyjump",
	"/e fly [Number for fly speed (Defult 2)]",
	"/e unfly",
	"/e setspawn",
	"/e toolrange",
	"/e spin [Number between 1-10000]",
	"/e unspin",
	"/e headsit [Player name or display]",
	"/e headstand [Player name or display]",
	"/e tpwalk [Number between 1-10000]",
	"/e untpwalk",
}

--Setup
local MainGui = Instance.new("ScreenGui")
MainGui.Parent = Player.PlayerGui
MainGui.ResetOnSpawn = false
local MainFrame = Instance.new("Frame", MainGui)
MainFrame.Position = UDim2.new(0.179, 0,0.172, 0)
MainFrame.Size = UDim2.new(0.641, 0,0.656, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(54, 54, 54)
local UiCorner = Instance.new("UICorner", MainFrame)
local SecondMainFrame = Instance.new("Frame", MainFrame)
SecondMainFrame.Position = UDim2.new(0, 0,0.115, 0)
SecondMainFrame.Size = UDim2.new(1, 0,0.885, 0)
SecondMainFrame.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
local UiCorner = Instance.new("UICorner", SecondMainFrame)
local MinimizeButton = Instance.new("TextButton", MainFrame)
MinimizeButton.Position = UDim2.new(0.942, 0,0, 0)
MinimizeButton.Size = UDim2.new(0.058, 0,0.115, 0)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(76, 76, 76)
MinimizeButton.Text = "-"
MinimizeButton.TextScaled = true
MinimizeButton.RichText = true
MinimizeButton.TextStrokeTransparency = 0
MinimizeButton.TextStrokeColor3 = Color3.fromRGB(255,255,255)
MinimizeButton.FontFace = Font.fromEnum(Enum.Font.Arcade)
local UiCorner = Instance.new("UICorner", MinimizeButton)
local Title = Instance.new("TextLabel", MainFrame)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.Size = UDim2.new(0.942, 0,0.115, 0)
Title.BackgroundTransparency = 1
Title.Text = "Furs Commands"
Title.TextColor3 = Color3.new(0,0,0)
Title.TextStrokeTransparency = 0
Title.TextStrokeColor3 = Color3.fromRGB(255,255,255)
Title.FontFace = Font.fromEnum(Enum.Font.Arcade)
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.TextScaled = true
Title.RichText = true
local PrintsFrame = Instance.new("ScrollingFrame", SecondMainFrame)
PrintsFrame.Position = UDim2.new(0.151, 0,0, 0)
PrintsFrame.Size = UDim2.new(0.849, 0,1, 0)
PrintsFrame.BackgroundTransparency = 1
PrintsFrame.CanvasSize = UDim2.new(0,0,10000,0)
PrintsFrame.Visible = false
local UiListLayout = Instance.new("UIListLayout", PrintsFrame)
local CommandsFrame = Instance.new("ScrollingFrame", SecondMainFrame)
CommandsFrame.Position = UDim2.new(0.151, 0,0, 0)
CommandsFrame.Size = UDim2.new(0.849, 0,1, 0)
CommandsFrame.BackgroundTransparency = 1
CommandsFrame.CanvasSize = UDim2.new(0,0,500,0)
CommandsFrame.Visible = false
local UiListLayout = Instance.new("UIListLayout", CommandsFrame)
local PlayerFrame = Instance.new("ScrollingFrame", SecondMainFrame)
PlayerFrame.Position = UDim2.new(0.151, 0,0, 0)
PlayerFrame.Size = UDim2.new(0.849, 0,1, 0)
PlayerFrame.BackgroundTransparency = 1
local UiListLayout = Instance.new("UIListLayout", PlayerFrame)
local ButtonFrame = Instance.new("Frame", SecondMainFrame)
ButtonFrame.Size = UDim2.new(0.151, 0,1, 0)
ButtonFrame.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
ButtonFrame.BackgroundTransparency = 0.5
local UiCorner = Instance.new("UICorner", ButtonFrame)
local UiListLayout = Instance.new("UIListLayout", ButtonFrame)
UiListLayout.Padding = UDim.new(0, 5)
local PlayerButton = Instance.new("TextButton", ButtonFrame)
PlayerButton.Size = UDim2.new(1, 0,0.13, 0)
PlayerButton.BackgroundColor3 = Color3.fromRGB(100,100,100)
PlayerButton.Text = "Player"
PlayerButton.TextColor3 = Color3.fromRGB(0,0,0)
PlayerButton.TextStrokeTransparency = 0
PlayerButton.TextStrokeColor3 = Color3.fromRGB(255,255,255)
PlayerButton.TextScaled = true
local UiCorner = Instance.new("UICorner", PlayerButton)
local CommandsButton = Instance.new("TextButton", ButtonFrame)
CommandsButton.Size = UDim2.new(1, 0,0.13, 0)
CommandsButton.BackgroundColor3 = Color3.fromRGB(100,100,100)
CommandsButton.Text = "Cmds"
CommandsButton.TextColor3 = Color3.fromRGB(0,0,0)
CommandsButton.TextStrokeTransparency = 0
CommandsButton.TextStrokeColor3 = Color3.fromRGB(255,255,255)
CommandsButton.TextScaled = true
local UiCorner = Instance.new("UICorner", CommandsButton)
local PrintsButton = Instance.new("TextButton", ButtonFrame)
PrintsButton.Size = UDim2.new(1, 0,0.13, 0)
PrintsButton.BackgroundColor3 = Color3.fromRGB(100,100,100)
PrintsButton.Text = "Prints"
PrintsButton.TextColor3 = Color3.fromRGB(0,0,0)
PrintsButton.TextStrokeTransparency = 0
PrintsButton.TextStrokeColor3 = Color3.fromRGB(255,255,255)
PrintsButton.TextScaled = true
local UiCorner = Instance.new("UICorner", PrintsButton)

--Ui PlayerData
local PlayerName = Instance.new("TextLabel", PlayerFrame)
PlayerName.Size = UDim2.new(0.98, 0,0.1, 0)
PlayerName.BackgroundTransparency = 1
PlayerName.Text = "Hello, "..Player.Name.."! ("..Player.DisplayName..")"
PlayerName.TextColor3 = Color3.fromRGB(0,0,0)
PlayerName.TextStrokeTransparency = 0
PlayerName.TextStrokeColor3 = Color3.fromRGB(255,255,255)
PlayerName.TextScaled = true
PlayerName.RichText = true
local AccountAge = Instance.new("TextLabel", PlayerFrame)
AccountAge.Size = UDim2.new(0.98, 0,0.05, 0)
AccountAge.BackgroundTransparency = 1
AccountAge.Text = "Account age: "..Player.AccountAge.." Days"
AccountAge.TextColor3 = Color3.new(0,0,0)
AccountAge.TextStrokeTransparency = 0
AccountAge.TextStrokeColor3 = Color3.new(1,1,1)
AccountAge.TextScaled = true
AccountAge.RichText = true
local TimeUsingScript = Instance.new("TextLabel", PlayerFrame)
TimeUsingScript.Size = UDim2.new(0.98, 0,0.05, 0)
TimeUsingScript.BackgroundTransparency = 1
TimeUsingScript.Text = "You have been using this script for "..TimeUsedScript.." seconds"
TimeUsingScript.TextColor3 = Color3.new(0,0,0)
TimeUsingScript.TextStrokeTransparency = 0
TimeUsingScript.TextStrokeColor3 = Color3.new(1,1,1)
TimeUsingScript.TextScaled = true
TimeUsingScript.RichText = true
local GameName = Instance.new("TextLabel", PlayerFrame)
GameName.Size = UDim2.new(0.98, 0,0.05, 0)
GameName.BackgroundTransparency = 1
GameName.Text = "Game updated at "..game.MarketplaceService:GetProductInfo(game.PlaceId, Enum.InfoType.Asset).Name.." ("..game.MarketplaceService:GetProductInfo(game.PlaceId, Enum.InfoType.Asset).AssetId..")"
GameName.TextColor3 = Color3.new(0,0,0)
GameName.TextStrokeTransparency = 0
GameName.TextStrokeColor3 = Color3.new(1,1,1)
GameName.TextScaled = true
GameName.RichText = true
local GameCreation = Instance.new("TextLabel", PlayerFrame)
GameCreation.Size = UDim2.new(0.98, 0,0.05, 0)
GameCreation.BackgroundTransparency = 1
GameCreation.Text = "Game created at "..game.MarketplaceService:GetProductInfo(game.PlaceId, Enum.InfoType.Asset).Created
GameCreation.TextColor3 = Color3.new(0,0,0)
GameCreation.TextStrokeTransparency = 0
GameCreation.TextStrokeColor3 = Color3.new(1,1,1)
GameCreation.TextScaled = true
GameCreation.RichText = true
local GameUpdate = Instance.new("TextLabel", PlayerFrame)
GameUpdate.Size = UDim2.new(0.98, 0,0.05, 0)
GameUpdate.BackgroundTransparency = 1
GameUpdate.Text = "Game updated at "..game.MarketplaceService:GetProductInfo(game.PlaceId, Enum.InfoType.Asset).Updated
GameUpdate.TextColor3 = Color3.new(0,0,0)
GameUpdate.TextStrokeTransparency = 0
GameUpdate.TextStrokeColor3 = Color3.new(1,1,1)
GameUpdate.TextScaled = true
GameUpdate.RichText = true
local CreatorName = Instance.new("TextLabel", PlayerFrame)
CreatorName.Size = UDim2.new(0.98, 0,0.05, 0)
CreatorName.BackgroundTransparency = 1
CreatorName.Text = "Creator: "..game.MarketplaceService:GetProductInfo(game.PlaceId, Enum.InfoType.Asset).Creator.Name.." ("..game.MarketplaceService:GetProductInfo(game.PlaceId, Enum.InfoType.Asset).Creator.CreatorTargetId..")"
CreatorName.TextColor3 = Color3.new(0,0,0)
CreatorName.TextStrokeTransparency = 0
CreatorName.TextStrokeColor3 = Color3.new(1,1,1)
CreatorName.TextScaled = true
CreatorName.RichText = true

print(game.MarketplaceService:GetProductInfo(game.PlaceId, Enum.InfoType.Asset))

local NotificationSound = Instance.new("Sound", Player)
NotificationSound.SoundId = "rbxassetid://6647898215"
local NotificationSound2 = Instance.new("Sound", Player)
NotificationSound2.SoundId = "rbxassetid://6647897822"
local FunnyNotificationSound = Instance.new("Sound", Player)
FunnyNotificationSound.SoundId = "rbxassetid://9125845655"
local DiedSound = Instance.new("Sound", Player)
DiedSound.SoundId = "rbxassetid://6598984092"
local ErrorSound = Instance.new("Sound", Player)
ErrorSound.SoundId = "rbxassetid://9066063340"
local LoadedSound = Instance.new("Sound", Player)
LoadedSound.SoundId = "rbxassetid://7383525713"

--Getting character
local Char = Player.Character
local Head = Char.Head
local Torso
local LowerTorso
local LeftArm
local UpperLeftArm
local LowerLeftArm
local LeftHand
local RightArm
local UpperRightArm
local LowerRightArm
local RightHand
local LeftLeg
local UpperLeftLeg
local LowerLeftLeg
local LeftFoot
local RightLeg
local UpperRightLeg
local LowerRightLeg
local RightFoot

if Char:FindFirstChild("UpperTorso") then
	Torso = Char.UpperTorso
	LowerTorso = Char.LowerTorso
	UpperLeftArm = Char.LeftUpperArm
	LowerLeftArm = Char.LeftLowerArm
	LeftHand = Char.LeftHand
	UpperRightArm = Char.RightUpperArm
	LowerRightArm = Char.RightLowerArm
	RightHand = Char.RightHand
	UpperLeftLeg = Char.LeftUpperLeg
	LowerLeftLeg = Char.LeftLowerLeg
	LeftFoot = Char.LeftFoot
	UpperRightLeg = Char.RightUpperLeg
	LowerRightLeg = Char.RightLowerLeg
	RightFoot = Char.RightFoot
	R15 = true
elseif Char:FindFirstChild("Torso") then
	Torso = Char.Torso
	RightArm = Char["Right Arm"]
	LeftArm = Char["Left Arm"]
	RightLeg =  Char["Right Leg"]
	LeftLeg = Char["Left Leg"]
	R15 = false
end

--Player.CharacterRemoving:Connect(function()
--	repeat wait() until Player.CharacterAdded
--	Char = Player.Character
--	Head = Char.Head

--	if Char:FindFirstChild("UpperTorso") then
--		Torso = Char.UpperTorso
--		LowerTorso = Char.LowerTorso
--		UpperLeftArm = Char.LeftUpperArm
--		LowerLeftArm = Char.LeftLowerArm
--		LeftHand = Char.LeftHand
--		UpperRightArm = Char.RightUpperArm
--		LowerRightArm = Char.RightLowerArm
--		RightHand = Char.RightHand
--		UpperLeftLeg = Char.LeftUpperLeg
--		LowerLeftLeg = Char.LeftLowerLeg
--		LeftFoot = Char.LeftFoot
--		UpperRightLeg = Char.RightUpperLeg
--		LowerRightLeg = Char.RightLowerLeg
--		RightFoot = Char.RightFoot
--		R15 = true
--	elseif Char:FindFirstChild("Torso") then
--		Torso = Char.Torso
--		RightArm = Char["Right Arm"]
--		LeftArm = Char["Left Arm"]
--		RightLeg =  Char["Right Leg"]
--		LeftLeg = Char["Left Leg"]
--		R15 = false
--	end
--end)

--unknown functions
MinimizeButton.MouseButton1Click:Connect(function()
	if SecondMainFrame.Visible == true then
		SecondMainFrame.Visible = false
		MainFrame.Size = UDim2.new(0.3, 0,0.075, 0)
		MinimizeButton.Size = UDim2.new(0.11, 0,1, 0)
		Title.Size = UDim2.new(0.942, 0,1, 0)
	else
		SecondMainFrame.Visible = true
		MainFrame.Size = UDim2.new(0.641, 0,0.656, 0)
		MinimizeButton.Size = UDim2.new(0.058, 0,0.115, 0)
		Title.Size = UDim2.new(0.942, 0,0.115, 0)
	end
end)

PlayerButton.MouseButton1Click:Connect(function()
	CommandsFrame.Visible = false
	PrintsFrame.Visible = false
	PlayerFrame.Visible = true
end)

CommandsButton.MouseButton1Click:Connect(function()
	CommandsFrame.Visible = true
	PrintsFrame.Visible = false
	PlayerFrame.Visible = false
end)

PrintsButton.MouseButton1Click:Connect(function()
	CommandsFrame.Visible = false
	PrintsFrame.Visible = true
	PlayerFrame.Visible = false
end)

UIS.TextBoxFocused:Connect(function()
	IsTyping = true
end)

UIS.TextBoxFocusReleased:Connect(function()
	IsTyping = false
end)

--Freecam
local pi    = math.pi
local abs   = math.abs
local clamp = math.clamp
local exp   = math.exp
local rad   = math.rad
local sign  = math.sign
local sqrt  = math.sqrt
local tan   = math.tan

local ContextActionService = game:GetService("ContextActionService")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local Playerss = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local Settings = UserSettings()
local GameSettings = Settings.GameSettings

local LocalPlayer = Playerss.LocalPlayer
if not LocalPlayer then
	Playerss:GetPropertyChangedSignal("LocalPlayer"):Wait()
	LocalPlayer = Playerss.LocalPlayer
end

local Camera = Workspace.CurrentCamera
Workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
	local newCamera = Workspace.CurrentCamera
	if newCamera then
		Camera = newCamera
	end
end)

local FFlagUserExitFreecamBreaksWithShiftlock
do
	local success, result = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserExitFreecamBreaksWithShiftlock")
	end)
	FFlagUserExitFreecamBreaksWithShiftlock = success and result
end

------------------------------------------------------------------------

local TOGGLE_INPUT_PRIORITY = Enum.ContextActionPriority.Low.Value
local INPUT_PRIORITY = Enum.ContextActionPriority.High.Value
local FREECAM_MACRO_KB = {Enum.KeyCode.LeftShift, Enum.KeyCode.P}

local NAV_GAIN = Vector3.new(1, 1, 1)*64
local PAN_GAIN = Vector2.new(0.75, 1)*8
local FOV_GAIN = 300

local PITCH_LIMIT = rad(90)

local VEL_STIFFNESS = 1.5
local PAN_STIFFNESS = 1.0
local FOV_STIFFNESS = 4.0

------------------------------------------------------------------------

local Spring = {} do
	Spring.__index = Spring

	function Spring.new(freq, pos)
		local self = setmetatable({}, Spring)
		self.f = freq
		self.p = pos
		self.v = pos*0
		return self
	end

	function Spring:Update(dt, goal)
		local f = self.f*2*pi
		local p0 = self.p
		local v0 = self.v

		local offset = goal - p0
		local decay = exp(-f*dt)

		local p1 = goal + (v0*dt - offset*(f*dt + 1))*decay
		local v1 = (f*dt*(offset*f - v0) + v0)*decay

		self.p = p1
		self.v = v1

		return p1
	end

	function Spring:Reset(pos)
		self.p = pos
		self.v = pos*0
	end
end

------------------------------------------------------------------------

local cameraPos = Vector3.new()
local cameraRot = Vector2.new()
local cameraFov = 0

local velSpring = Spring.new(VEL_STIFFNESS, Vector3.new())
local panSpring = Spring.new(PAN_STIFFNESS, Vector2.new())
local fovSpring = Spring.new(FOV_STIFFNESS, 0)

------------------------------------------------------------------------

local Input = {} do
	local thumbstickCurve do
		local K_CURVATURE = 2.0
		local K_DEADZONE = 0.15

		local function fCurve(x)
			return (exp(K_CURVATURE*x) - 1)/(exp(K_CURVATURE) - 1)
		end

		local function fDeadzone(x)
			return fCurve((x - K_DEADZONE)/(1 - K_DEADZONE))
		end

		function thumbstickCurve(x)
			return sign(x)*clamp(fDeadzone(abs(x)), 0, 1)
		end
	end

	local gamepad = {
		ButtonX = 0,
		ButtonY = 0,
		DPadDown = 0,
		DPadUp = 0,
		ButtonL2 = 0,
		ButtonR2 = 0,
		Thumbstick1 = Vector2.new(),
		Thumbstick2 = Vector2.new(),
	}

	local keyboard = {
		W = 0,
		A = 0,
		S = 0,
		D = 0,
		E = 0,
		Q = 0,
		U = 0,
		H = 0,
		J = 0,
		K = 0,
		I = 0,
		Y = 0,
		Up = 0,
		Down = 0,
		LeftShift = 0,
		RightShift = 0,
	}

	local mouse = {
		Delta = Vector2.new(),
		MouseWheel = 0,
	}

	local NAV_GAMEPAD_SPEED  = Vector3.new(1, 1, 1)
	local NAV_KEYBOARD_SPEED = Vector3.new(1, 1, 1)
	local PAN_MOUSE_SPEED    = Vector2.new(1, 1)*(pi/64)
	local PAN_GAMEPAD_SPEED  = Vector2.new(1, 1)*(pi/8)
	local FOV_WHEEL_SPEED    = 1.0
	local FOV_GAMEPAD_SPEED  = 0.25
	local NAV_ADJ_SPEED      = 0.75
	local NAV_SHIFT_MUL      = 0.25

	local navSpeed = 1

	function Input.Vel(dt)
		navSpeed = clamp(navSpeed + dt*(keyboard.Up - keyboard.Down)*NAV_ADJ_SPEED, 0.01, 4)

		local kGamepad = Vector3.new(
			thumbstickCurve(gamepad.Thumbstick1.X),
			thumbstickCurve(gamepad.ButtonR2) - thumbstickCurve(gamepad.ButtonL2),
			thumbstickCurve(-gamepad.Thumbstick1.Y)
		)*NAV_GAMEPAD_SPEED

		local kKeyboard = Vector3.new(
			keyboard.D - keyboard.A + keyboard.K - keyboard.H,
			keyboard.E - keyboard.Q + keyboard.I - keyboard.Y,
			keyboard.S - keyboard.W + keyboard.J - keyboard.U
		)*NAV_KEYBOARD_SPEED

		local shift = UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) or UserInputService:IsKeyDown(Enum.KeyCode.RightShift)

		return (kGamepad + kKeyboard)*(navSpeed*(shift and NAV_SHIFT_MUL or 1))
	end

	function Input.Pan(dt)
		local kGamepad = Vector2.new(
			thumbstickCurve(gamepad.Thumbstick2.Y),
			thumbstickCurve(-gamepad.Thumbstick2.X)
		)*PAN_GAMEPAD_SPEED
		local kMouse = mouse.Delta*PAN_MOUSE_SPEED
		mouse.Delta = Vector2.new()
		return kGamepad + kMouse
	end

	function Input.Fov(dt)
		local kGamepad = (gamepad.ButtonX - gamepad.ButtonY)*FOV_GAMEPAD_SPEED
		local kMouse = mouse.MouseWheel*FOV_WHEEL_SPEED
		mouse.MouseWheel = 0
		return kGamepad + kMouse
	end

	do
		local function Keypress(action, state, input)
			keyboard[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
			return Enum.ContextActionResult.Sink
		end

		local function GpButton(action, state, input)
			gamepad[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
			return Enum.ContextActionResult.Sink
		end

		local function MousePan(action, state, input)
			local delta = input.Delta
			mouse.Delta = Vector2.new(-delta.y, -delta.x)
			return Enum.ContextActionResult.Sink
		end

		local function Thumb(action, state, input)
			gamepad[input.KeyCode.Name] = input.Position
			return Enum.ContextActionResult.Sink
		end

		local function Trigger(action, state, input)
			gamepad[input.KeyCode.Name] = input.Position.z
			return Enum.ContextActionResult.Sink
		end

		local function MouseWheel(action, state, input)
			mouse[input.UserInputType.Name] = -input.Position.z
			return Enum.ContextActionResult.Sink
		end

		local function Zero(t)
			for k, v in pairs(t) do
				t[k] = v*0
			end
		end

		function Input.StartCapture()
			ContextActionService:BindActionAtPriority("FreecamKeyboard", Keypress, false, INPUT_PRIORITY,
				Enum.KeyCode.W, Enum.KeyCode.U,
				Enum.KeyCode.A, Enum.KeyCode.H,
				Enum.KeyCode.S, Enum.KeyCode.J,
				Enum.KeyCode.D, Enum.KeyCode.K,
				Enum.KeyCode.E, Enum.KeyCode.I,
				Enum.KeyCode.Q, Enum.KeyCode.Y,
				Enum.KeyCode.Up, Enum.KeyCode.Down
			)
			ContextActionService:BindActionAtPriority("FreecamMousePan",          MousePan,   false, INPUT_PRIORITY, Enum.UserInputType.MouseMovement)
			ContextActionService:BindActionAtPriority("FreecamMouseWheel",        MouseWheel, false, INPUT_PRIORITY, Enum.UserInputType.MouseWheel)
			ContextActionService:BindActionAtPriority("FreecamGamepadButton",     GpButton,   false, INPUT_PRIORITY, Enum.KeyCode.ButtonX, Enum.KeyCode.ButtonY)
			ContextActionService:BindActionAtPriority("FreecamGamepadTrigger",    Trigger,    false, INPUT_PRIORITY, Enum.KeyCode.ButtonR2, Enum.KeyCode.ButtonL2)
			ContextActionService:BindActionAtPriority("FreecamGamepadThumbstick", Thumb,      false, INPUT_PRIORITY, Enum.KeyCode.Thumbstick1, Enum.KeyCode.Thumbstick2)
		end

		function Input.StopCapture()
			navSpeed = 1
			Zero(gamepad)
			Zero(keyboard)
			Zero(mouse)
			ContextActionService:UnbindAction("FreecamKeyboard")
			ContextActionService:UnbindAction("FreecamMousePan")
			ContextActionService:UnbindAction("FreecamMouseWheel")
			ContextActionService:UnbindAction("FreecamGamepadButton")
			ContextActionService:UnbindAction("FreecamGamepadTrigger")
			ContextActionService:UnbindAction("FreecamGamepadThumbstick")
		end
	end
end

local function GetFocusDistance(cameraFrame)
	local znear = 0.1
	local viewport = Camera.ViewportSize
	local projy = 2*tan(cameraFov/2)
	local projx = viewport.x/viewport.y*projy
	local fx = cameraFrame.rightVector
	local fy = cameraFrame.upVector
	local fz = cameraFrame.lookVector

	local minVect = Vector3.new()
	local minDist = 512

	for x = 0, 1, 0.5 do
		for y = 0, 1, 0.5 do
			local cx = (x - 0.5)*projx
			local cy = (y - 0.5)*projy
			local offset = fx*cx - fy*cy + fz
			local origin = cameraFrame.p + offset*znear
			local _, hit = Workspace:FindPartOnRay(Ray.new(origin, offset.unit*minDist))
			local dist = (hit - origin).magnitude
			if minDist > dist then
				minDist = dist
				minVect = offset.unit
			end
		end
	end

	return fz:Dot(minVect)*minDist
end

------------------------------------------------------------------------

local function StepFreecam(dt)
	local vel = velSpring:Update(dt, Input.Vel(dt))
	local pan = panSpring:Update(dt, Input.Pan(dt))
	local fov = fovSpring:Update(dt, Input.Fov(dt))

	local zoomFactor = sqrt(tan(rad(70/2))/tan(rad(cameraFov/2)))

	cameraFov = clamp(cameraFov + fov*FOV_GAIN*(dt/zoomFactor), 1, 120)
	cameraRot = cameraRot + pan*PAN_GAIN*(dt/zoomFactor)
	cameraRot = Vector2.new(clamp(cameraRot.x, -PITCH_LIMIT, PITCH_LIMIT), cameraRot.y%(2*pi))

	local cameraCFrame = CFrame.new(cameraPos)*CFrame.fromOrientation(cameraRot.x, cameraRot.y, 0)*CFrame.new(vel*NAV_GAIN*dt)
	cameraPos = cameraCFrame.p

	Camera.CFrame = cameraCFrame
	Camera.Focus = cameraCFrame*CFrame.new(0, 0, -GetFocusDistance(cameraCFrame))
	Camera.FieldOfView = cameraFov
end

local function CheckMouseLockAvailability()
	local devAllowsMouseLock = Playerss.LocalPlayer.DevEnableMouseLock
	local devMovementModeIsScriptable = Playerss.LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.Scriptable
	local userHasMouseLockModeEnabled = GameSettings.ControlMode == Enum.ControlMode.MouseLockSwitch
	local userHasClickToMoveEnabled =  GameSettings.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove
	local MouseLockAvailable = devAllowsMouseLock and userHasMouseLockModeEnabled and not userHasClickToMoveEnabled and not devMovementModeIsScriptable

	return MouseLockAvailable
end

------------------------------------------------------------------------

local PlayerState = {} do
	local mouseBehavior
	local mouseIconEnabled
	local cameraType
	local cameraFocus
	local cameraCFrame
	local cameraFieldOfView
	local screenGuis = {}
	local coreGuis = {
		Backpack = true,
		Chat = true,
		Health = true,
		PlayerList = true,
	}
	local setCores = {
		BadgesNotificationsActive = true,
		PointsNotificationsActive = true,
	}

	-- Save state and set up for freecam
	function PlayerState.Push()
		for name in pairs(coreGuis) do
			coreGuis[name] = StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType[name])
			StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType[name], false)
		end
		for name in pairs(setCores) do
			setCores[name] = StarterGui:GetCore(name)
			StarterGui:SetCore(name, false)
		end
		local playergui = LocalPlayer:FindFirstChildOfClass("PlayerGui")
		if playergui then
			for _, gui in pairs(playergui:GetChildren()) do
				if gui:IsA("ScreenGui") and gui.Enabled then
					screenGuis[#screenGuis + 1] = gui
					gui.Enabled = false
				end
			end
		end

		cameraFieldOfView = Camera.FieldOfView
		Camera.FieldOfView = 70

		cameraType = Camera.CameraType
		Camera.CameraType = Enum.CameraType.Custom

		cameraCFrame = Camera.CFrame
		cameraFocus = Camera.Focus

		mouseIconEnabled = UserInputService.MouseIconEnabled
		UserInputService.MouseIconEnabled = false

		if FFlagUserExitFreecamBreaksWithShiftlock and CheckMouseLockAvailability() then
			mouseBehavior = Enum.MouseBehavior.Default
		else
			mouseBehavior = UserInputService.MouseBehavior
		end
		UserInputService.MouseBehavior = Enum.MouseBehavior.Default
	end

	-- Restore state
	function PlayerState.Pop()
		for name, isEnabled in pairs(coreGuis) do
			StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType[name], isEnabled)
		end
		for name, isEnabled in pairs(setCores) do
			StarterGui:SetCore(name, isEnabled)
		end
		for _, gui in pairs(screenGuis) do
			if gui.Parent then
				gui.Enabled = true
			end
		end

		Camera.FieldOfView = cameraFieldOfView
		cameraFieldOfView = nil

		Camera.CameraType = cameraType
		cameraType = nil

		Camera.CFrame = cameraCFrame
		cameraCFrame = nil

		Camera.Focus = cameraFocus
		cameraFocus = nil

		UserInputService.MouseIconEnabled = mouseIconEnabled
		mouseIconEnabled = nil

		UserInputService.MouseBehavior = mouseBehavior
		mouseBehavior = nil
	end
end

local function StartFreecam()
	local cameraCFrame = Camera.CFrame
	cameraRot = Vector2.new(cameraCFrame:toEulerAnglesYXZ())
	cameraPos = cameraCFrame.p
	cameraFov = Camera.FieldOfView

	velSpring:Reset(Vector3.new())
	panSpring:Reset(Vector2.new())
	fovSpring:Reset(0)

	PlayerState.Push()
	RunService:BindToRenderStep("Freecam", Enum.RenderPriority.Camera.Value, StepFreecam)
	Input.StartCapture()
end

local function StopFreecam()
	Input.StopCapture()
	RunService:UnbindFromRenderStep("Freecam")
	PlayerState.Pop()
end

------------------------------------------------------------------------

do
	local enabled = false

	local function ToggleFreecam()
		if enabled then
			StopFreecam()
		else
			StartFreecam()
		end
		enabled = not enabled
	end

	local function CheckMacro(macro)
		for i = 1, #macro - 1 do
			if not UserInputService:IsKeyDown(macro[i]) then
				return
			end
		end
		ToggleFreecam()
	end

	local function HandleActivationInput(action, state, input)
		if state == Enum.UserInputState.Begin then
			if input.KeyCode == FREECAM_MACRO_KB[#FREECAM_MACRO_KB] then
				CheckMacro(FREECAM_MACRO_KB)
			end
		end
		return Enum.ContextActionResult.Pass
	end

	ContextActionService:BindActionAtPriority("FreecamToggle", HandleActivationInput, false, TOGGLE_INPUT_PRIORITY, FREECAM_MACRO_KB[#FREECAM_MACRO_KB])
end
--Freecam end

--Command Functions
function getRoot(char)
	local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
	return rootPart
end

function dragify(Frame)
	local dragToggle = nil
	local dragSpeed = 0
	local dragInput = nil
	local dragStart = nil
	local dragPos = nil
	local function updateInput(input)
		local Delta = input.Position - dragStart
		local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
		game:GetService("TweenService"):Create(Frame, TweenInfo.new(0.25), {Position = Position}):Play()
	end
	Frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and UIS:GetFocusedTextBox() == nil then
			dragToggle = true
			dragStart = input.Position
			startPos = Frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)
	Frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	game:GetService("UserInputService").InputChanged:Connect(function(input)
		if input == dragInput and dragToggle then
			updateInput(input)
		end
	end)
end

local function PrintNothing(Amount)
	local Second = false
	for i=1,Amount do
		wait()
		if Second == false then
			print(" ")
			Second = true
		else
			print("  ")
			Second = false
		end
	end
end

local function SendNotification(TitleText, Text, Duration, Button1Text)
	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = TitleText;
		Text = Text;
		Duration = 5;
		Button1 = Button1Text;
	})
end

local function MakeNewTextPrint(Text)
	local TextLabel = Instance.new("TextLabel")
	TextLabel.Parent = PrintsFrame
	TextLabel.Size = UDim2.new(0.97,0,0.00001,0)
	TextLabel.BackgroundTransparency = 1
	TextLabel.TextStrokeTransparency = 0
	TextLabel.TextColor3 = Color3.new(0.176471, 0.176471, 0.176471)
	TextLabel.TextStrokeColor3 = Color3.new(1,1,1)
	TextLabel.Text = Text
	TextLabel.TextScaled = true
	TextLabel.TextWrapped = true
	TextLabel.RichText = true
end

local function MakeNewTextCommand(Text)
	local TextLabel = Instance.new("TextLabel")
	TextLabel.Parent = CommandsFrame
	TextLabel.Size = UDim2.new(0.97,0,0.00025,0)
	TextLabel.BackgroundTransparency = 1
	TextLabel.TextStrokeTransparency = 0
	TextLabel.TextColor3 = Color3.new(0.176471, 0.176471, 0.176471)
	TextLabel.TextStrokeColor3 = Color3.new(1, 1, 1)
	TextLabel.Text = Text
	TextLabel.TextScaled = true
	TextLabel.TextWrapped = true
	TextLabel.RichText = true
end


local function Float(State)
	NotificationSound:Play()
	Floating = State
	local Lower = false
	local Higher = false
	while Floating == true do
		local Part = Instance.new("Part")
		Part.Parent = workspace
		Part.Position = Torso.Position
		Part.Anchored = true
		Part.Size = Vector3.new(3,1,3)
		Part.Position=Part.Position-Vector3.new(0,3.53,0)
		if Lower == true then
			Part.Position = Torso.Position
			Part.Position=Part.Position-Vector3.new(0,4,0)
		elseif Higher == true then
			Part.Position = Torso.Position
			Part.Position=Part.Position-Vector3.new(0,3,0)
		end
		Part.Transparency = 1
		wait(0.0001)
		Part:Remove()
		UIS.InputBegan:Connect(function(input)
			if Floating == true and IsTyping == false then
				if input.KeyCode == Enum.KeyCode.Q then
					Lower = true
				end
			end
		end)
		UIS.InputEnded:Connect(function(input)
			if input.KeyCode == Enum.KeyCode.Q then
				Lower = false
			end
		end)

		UIS.InputBegan:Connect(function(input)
			if Floating == true and IsTyping == false then
				if input.KeyCode == Enum.KeyCode.E then
					Higher = true
				end
			end
		end)
		UIS.InputEnded:Connect(function(input)
			if input.KeyCode == Enum.KeyCode.E then
				Higher = false
			end
		end)
	end
end

local function Follow(State, Followed)
	NotificationSound:Play()
	Following = State
	while Following == true do
		wait()
		Char.Humanoid:MoveTo(Followed.Position, Char)
	end
end

local function FollowNPC(State, Followed)
	NotificationSound:Play()
	Following = State
	while Following == true do
		wait()
		Char.Humanoid:MoveTo(Followed.Position, Char)
	end
end

local FoundItems = 0
local function FoundMore(Model)
	local ModelChildren = Model:GetChildren()
	for i=1,#ModelChildren do
		wait()
		FoundItems=FoundItems+1
		print(FoundItems..".."..Model:GetFullName().."."..ModelChildren[i].Name)
		MakeNewTextPrint(FoundItems..".."..Model:GetFullName().."."..ModelChildren[i].Name)
		local OtherChildren = ModelChildren[i]:GetChildren()
		local Num = 0
		for i=1,#OtherChildren do Num=Num+1 end
		if Num > 1 then
			FoundMore(ModelChildren[i])
		end
	end
end

local function FindWorkspace()
	PrintNothing(10)
	NotificationSound2:Play()
	for i=1,#WorkspaceChildren do
		wait()
		FoundItems=FoundItems+1
		print(FoundItems..".."..WorkspaceChildren[i].Name)
		MakeNewTextPrint(FoundItems..".."..WorkspaceChildren[i].Name)
		local OtherChildren = WorkspaceChildren[i]:GetChildren()
		local Num = 0
		for i=1,#OtherChildren do Num=Num+1 end
		if Num > 1 then
			FoundMore(WorkspaceChildren[i])
		end
	end
end

local function ClearPrints()
	NotificationSound:Play()
	local C = PrintsFrame:GetChildren()
	local Total = 0
	for i=1,#C do
		wait()
		if C[i].Name == "TextLabel" then
			C[i]:Remove()
			Total=Total+1
		end
	end
	print("Removed "..Total.." prints!")
	MakeNewTextPrint("Removed "..Total.." prints!")
	wait(5)
	PrintsFrame:FindFirstChild("TextLabel"):Remove()
end

local function FoundMoreXray(Model)
	local ModelChildren = Model:GetChildren()
	for i=1,#ModelChildren do
		if ModelChildren[i]:IsA("Part") then
			if ModelChildren[i].Name ~= "HumanoidRootPart" then
				ModelChildren[i].Transparency = 0.5
			end
		end
		local OtherChildren = ModelChildren[i]:GetChildren()
		local Num = 0
		for i=1,#OtherChildren do Num=Num+1 end
		if Num > 1 then
			FoundMoreXray(ModelChildren[i])
		end
	end
end

local function PartXray()
	NotificationSound:Play()
	for i=1,#WorkspaceChildren do
		if WorkspaceChildren[i]:IsA("Part") then
			if WorkspaceChildren[i].Name ~= "HumanoidRootPart" then
				WorkspaceChildren[i].Transparency = 0.5
			end
		end
		local OtherChildren = WorkspaceChildren[i]:GetChildren()
		local Num = 0
		for i=1,#OtherChildren do Num=Num+1 end
		if Num > 1 then
			FoundMoreXray(WorkspaceChildren[i])
		end
	end
end

local function FoundMoreUnxray(Model)
	local ModelChildren = Model:GetChildren()
	for i=1,#ModelChildren do
		if ModelChildren[i]:IsA("Part") then
			if ModelChildren[i].Name ~= "HumanoidRootPart" then
				ModelChildren[i].Transparency = 0
			end
		end
		local OtherChildren = ModelChildren[i]:GetChildren()
		local Num = 0
		for i=1,#OtherChildren do Num=Num+1 end
		if Num > 1 then
			FoundMoreUnxray(ModelChildren[i])
		end
	end
end

local function UnPartXray()
	NotificationSound:Play()
	for i=1,#WorkspaceChildren do
		if WorkspaceChildren[i]:IsA("Part") then
			if WorkspaceChildren[i].Name ~= "HumanoidRootPart" then
				WorkspaceChildren[i].Transparency = 0
			end
		end
		local OtherChildren = WorkspaceChildren[i]:GetChildren()
		local Num = 0
		for i=1,#OtherChildren do Num=Num+1 end
		if Num > 1 then
			FoundMoreUnxray(WorkspaceChildren[i])
		end
	end
end

local function FoundMoreunNoclip(Model)
	local ModelChildren = Model:GetChildren()
	for i=1,#ModelChildren do
		if ModelChildren[i]:IsA("Part") then
			ModelChildren[i].CanCollide = true
		end
		local OtherChildren = ModelChildren[i]:GetChildren()
		local Num = 0
		for i=1,#OtherChildren do Num=Num+1 end
		if Num > 1 then
			FoundMoreunNoclip(ModelChildren[i])
		end
	end
end

local function Noclip(State)
	NotificationSound:Play()
	Nocliping = State
	local function MakeNoCollison(Part)
		Part.CanCollide = false
	end

	if R15 == true then
		RightHand.Touched:Connect(function(Part) if Nocliping == true then MakeNoCollison(Part) end end)
		UpperRightArm.Touched:Connect(function(Part) if Nocliping == true then MakeNoCollison(Part) end end)
		LowerRightArm.Touched:Connect(function(Part) if Nocliping == true then MakeNoCollison(Part) end end)
		LeftHand.Touched:Connect(function(Part) if Nocliping == true then MakeNoCollison(Part) end end)
		UpperLeftArm.Touched:Connect(function(Part) if Nocliping == true then MakeNoCollison(Part) end end)
		LowerLeftArm.Touched:Connect(function(Part) if Nocliping == true then MakeNoCollison(Part) end end)
		Torso.Touched:Connect(function(Part) if Nocliping == true then MakeNoCollison(Part) end end)
		LowerTorso.Touched:Connect(function(Part) if Nocliping == true then MakeNoCollison(Part) end end)
		Head.Touched:Connect(function(Part) if Nocliping == true then MakeNoCollison(Part) end end)
	else
		RightArm.Touched:Connect(function(Part) if Nocliping == true then MakeNoCollison(Part) end end)
		LeftArm.Touched:Connect(function(Part) if Nocliping == true then MakeNoCollison(Part) end end)
		Torso.Touched:Connect(function(Part) if Nocliping == true then MakeNoCollison(Part) end end)
		Head.Touched:Connect(function(Part) if Nocliping == true then MakeNoCollison(Part) end end)
	end

	if Nocliping == false then
		for i=1,#WorkspaceChildren do
			if WorkspaceChildren[i]:IsA("Part") then
				WorkspaceChildren[i].CanCollide = true
			end
			local OtherChildren = WorkspaceChildren[i]:GetChildren()
			local Num = 0
			for i=1,#OtherChildren do Num=Num+1 end
			if Num > 1 then
				FoundMoreunNoclip(WorkspaceChildren[i])
			end
		end
	end
end

local function TeleportTo(PlayerTo)
	NotificationSound:Play()
	local Weld = Instance.new("Weld", Char)
	PlayerTo.Character.Torso.Anchored = true
	Weld.Part0 = PlayerTo.Character.Torso
	Weld.Part1 = Torso
	PlayerTo.Character.Torso.Anchored = false
	Weld:Remove()
end

local function FlyJump(State)
	NotificationSound:Play()
	FlyJumping = State
	while FlyJumping == true do
		wait()
		if Char.Humanoid.Jump == true then
			local Part = Instance.new("Part")
			Part.Parent = workspace
			Part.Transparency = 1
			Part.Position = Torso.Position
			Part.Size = Vector3.new(5,1,5)
			Part.Position=Part.Position-Vector3.new(0,4,0)
			wait()
			Part:Remove()
		end
	end
end

local function SetSpawn()
	NotificationSound:Play()
	spawnpos = getRoot(Char).CFrame
	SendNotification('Spawn Point','Spawn point created at '..tostring(spawnpos))
end

local function ToolRange(Tool)
	if Tool:FindFirstChild("Handle") then
		NotificationSound:Play()
		Tool.Handle.Size = Vector3.new(1,1,35)
	else
		ErrorSound:Play()
		SendNotification("Error!", "No handle found, please use a different tool!", 5, "Okay")
		MakeNewTextPrint("No handle found, please use a different tool!")
		print("No handle found, please use a different tool!")
	end
end

local lplayer = game:GetService("Players").LocalPlayer
local flying = false
local a = 1
local function Fly(State, Number)
	NotificationSound:Play()
	if State == true then
		SendNotification("Note,", "You can noclip by pressing E", 5, "Okay")
	end
	Flying = State

	if Flying == true then
		if a == 1 then
			repeat wait() until lplayer and lplayer.Character and lplayer.Character:FindFirstChild('HumanoidRootPart') and lplayer.Character:FindFirstChild('Humanoid')
			repeat wait() until Mouse

			local speedfly = Number

			local T = lplayer.Character.HumanoidRootPart
			local CONTROL = {F = 0, B = 0, L = 0, R = 0}
			local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
			local SPEED = speedfly

			local function fly()
				flying = true
				local BG = Instance.new('BodyGyro', T)
				local BV = Instance.new('BodyVelocity', T)
				BG.P = 9e4
				BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
				BG.cframe = T.CFrame
				BV.velocity = Vector3.new(0, 0.1, 0)
				BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
				spawn(function()
					repeat wait()
						lplayer.Character.Humanoid.PlatformStand = true
						if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
							SPEED = 50
						elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
							SPEED = 0
						end
						if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
							BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
							lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
						elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
							BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
						else
							BV.velocity = Vector3.new(0, 0.1, 0)
						end
						BG.cframe = workspace.CurrentCamera.CoordinateFrame
					until not flying
					CONTROL = {F = 0, B = 0, L = 0, R = 0}
					lCONTROL = {F = 0, B = 0, L = 0, R = 0}
					SPEED = 0
					BG:destroy()
					BV:destroy()
					lplayer.Character.Humanoid.PlatformStand = false
				end)
			end
			Mouse.KeyDown:connect(function(KEY)
				if KEY:lower() == 'w' then
					CONTROL.F = speedfly
				elseif KEY:lower() == 's' then
					CONTROL.B = -speedfly
				elseif KEY:lower() == 'a' then
					CONTROL.L = -speedfly
				elseif KEY:lower() == 'd' then
					CONTROL.R = speedfly
				end
			end)
			Mouse.KeyUp:connect(function(KEY)
				if KEY:lower() == 'w' then
					CONTROL.F = 0
				elseif KEY:lower() == 's' then
					CONTROL.B = 0
				elseif KEY:lower() == 'a' then
					CONTROL.L = 0
				elseif KEY:lower() == 'd' then
					CONTROL.R = 0
				end
			end)
			a = 0
			fly()
		else 
			flying = false
			lplayer.Character.Humanoid.PlatformStand = false
			a = 1
		end
		wait()

		local noclip = false
		local player = game.Players.LocalPlayer
		local character = player.Character
		local mouse = player:GetMouse()
		mouse.KeyDown:Connect(function(key)
			if key == "e" then
				noclip = not noclip
			end
		end)
		while Flying == true do
			player = game.Players.LocalPlayer
			character = player.Character
			if noclip then
				for _, v in pairs(character:GetDescendants()) do
					pcall(function()
						if v:IsA("BasePart") then
							v.CanCollide = false
						end
					end)
				end
			end
			game:GetService("RunService").Stepped:wait()
		end
	else
		flying = false
		a = 0
	end
end

local function Funny(State)
	Funnying = State
	FunnyNotificationSound:Play()
	while Funnying == true do
		wait()
		if R15 == true then
			Torso.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			LeftHand.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			UpperLeftArm.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			LowerLeftArm.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			RightHand.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			UpperRightArm.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			LowerRightArm.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			LeftFoot.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			UpperLeftLeg.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			LowerLeftLeg.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			RightFoot.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			UpperRightLeg.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			LowerRightLeg.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
		else
			Torso.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			RightArm.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			LeftArm.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			RightLeg.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			LeftLeg.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
		end
	end
end

local function Funny2(State)
	FunnyNotificationSound:Play()
	Funnying2 = State
	while Funnying2 == true do
		for i=1,40 do
			wait()
			Head.Size=Head.Size+Vector3.new(0.1,0.1,0.1)
		end
		for i=1,40 do
			wait()
			Head.Size=Head.Size-Vector3.new(0.1,0.1,0.1)
		end
	end
end

local function RemoveHats()
	NotificationSound:Play()
	local CharC = Char:GetChildren()

	for i=1,#CharC do
		if CharC[i]:IsA("Accessory") or CharC[i]:IsA("Hat") then
			CharC[i].Handle.Transparency = 1
		end
	end
end

local function RestoreHats()
	NotificationSound:Play()
	local CharC = Char:GetChildren()

	for i=1,#CharC do
		if CharC[i]:IsA("Accessory") or CharC[i]:IsA("Hat") then
			CharC[i].Handle.Transparency = 0
		end
	end
end

local function Funny3(State, Number)
	FunnyNotificationSound:Play()
	Funnying3 = State
	while Funnying3 == true do
		wait()
		Torso.Orientation = Vector3.new(Number,0,0)
	end
end

local function Spin(State, Number)
	NotificationSound:Play()
	Spinning = State
	while Spinning == true do
		wait()
		Torso.CFrame = Torso.CFrame * CFrame.fromEulerAnglesXYZ(0,(Number),0)
	end
end

local function HideGui(State)
	NotificationSound:Play()
	local PlayerGui = Player.PlayerGui:GetChildren()
	if State == true then
		for i=1,#PlayerGui do
			if PlayerGui[i]:IsA("ScreenGui") then
				if PlayerGui[i].Name ~= "Chat" then
					PlayerGui[i].Enabled = false
				end
			end
			MainGui.Enabled = true
		end
	else
		for i=1,#PlayerGui do
			if PlayerGui[i]:IsA("ScreenGui") then
				PlayerGui[i].Enabled = true
			end
			MainGui.Enabled = true
		end
	end
end

local function GetNewestVersion()
	NotificationSound:Play()
	MakeNewTextPrint("Newest version is V"..NewestVersion)
	MakeNewTextPrint("You are currently using V"..ScriptVersion)
	SendNotification("Newest version", "V"..NewestVersion, 5, "Okay")
	wait(2.5)
	if ScriptVersion == NewestVersion then
		SendNotification("Current script version", "You are up to date! (V"..ScriptVersion..")", 5, "Okay")
	else
		SendNotification("Current script version", "V"..ScriptVersion, 5, "Okay")
	end
end

local function Headsit(PlayerTo)
	NotificationSound:Play()
	Char.Humanoid.Sit = true
	local Weld = Instance.new("Weld", Torso)
	Weld.Part0 = Torso
	Weld.Part1 = PlayerTo.Character.Head
	Weld.C1 = CFrame.fromMatrix(Vector3.new(0,0.2,0.7), Vector3.xAxis, Vector3.yAxis, Vector3.zAxis)

	while Char.Humanoid.Sit == true do
		wait()
		if Char.Humanoid.Sit == false then
			Weld:Remove()
		end
	end
end

local function HeadStand(PlayerTo)
	NotificationSound:Play()
	Char.Humanoid.PlatformStand = true
	local Weld = Instance.new("Weld", Torso)
	Weld.Part0 = Torso
	Weld.Part1 = PlayerTo.Character.Head
	Weld.C1 = CFrame.fromMatrix(Vector3.new(0,3.5,0), Vector3.xAxis, Vector3.yAxis, Vector3.zAxis)

	while Char.Humanoid.PlatformStand == true do
		wait()
		if Char.Humanoid.Jump == true then
			Weld:Remove()
			Char.Humanoid.PlatformStand = false
		end
	end
end

local Forward = false
local Backward = false
local Left = false
local Right = false
local function Tpwalk(State, Number)
	local Speed
	NotificationSound:Play()
	Tpwalking = State
	
	local hb = RunService.Heartbeat
	while Tpwalking == true do
		wait()
		local delta = hb:Wait()
		if Char.Humanoid.MoveDirection.Magnitude > 0 then
			Char:TranslateBy(Char.Humanoid.MoveDirection * tonumber(Number) * delta * 10)
			Char:TranslateBy(Char.Humanoid.MoveDirection * delta * 10)
		end
	end
end

local function Funny4(State, Number)
	NotificationSound:Play()
	Funnying4 = State
	while Funnying4 == true do
		wait()
		Torso.CFrame = Torso.CFrame * CFrame.fromEulerAnglesXYZ((Number),(Number),(Number))
	end
end

--Chatted commands
Player.Chatted:Connect(function(message)
	if message == "/e rejoin" then
		local TeleportService = game:GetService("TeleportService")
		if #Players:GetPlayers() <= 1 then
			Players.LocalPlayer:Kick("\nRejoining...")
			wait()
			TeleportService:Teleport(game.PlaceId, Players.LocalPlayer)
		else
			TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, Players.LocalPlayer)
		end
	end
	
	if message == "/e fixgui" then
		NotificationSound:Play()
		MainFrame.Position = UDim2.new(0.5,0,0.5,0)
	end

	if message == "/e newestversion" then
		GetNewestVersion()
	end

	if message == "/e hidegui" then
		HideGui(true)
	elseif message == "/e showgui" then
		HideGui(false)
	end

	if message == "/e bighead" then
		NotificationSound:Play()
		Head.Size = Vector3.new(5,5,5)
	elseif message == "/e smallhead" then
		NotificationSound:Play()
		Head.Size = Vector3.new(0.3,0.3,0.3)
	elseif message == "/e normalhead" then
		NotificationSound:Play()
		Head.Size = Vector3.new(2, 1, 1)
	end

	if message == "/e removehats" then
		RemoveHats()
	elseif message == "/e restorehats" then
		RestoreHats()
	end

	if message == "/e funny" then
		Funny(true)
	elseif message == "/e unfunny" then
		Funny(false)
	end

	if message == "/e funny2" then
		Funny2(true)
	elseif message == "/e unfunny2" then
		Funny2(false)
	end

	if message == "/e toolrange" then
		local charChildren = Char:GetChildren()
		local FoundTool = false
		local Tool = nil
		for i=1,#charChildren do
			if charChildren[i]:IsA("Tool") then
				FoundTool = true
				Tool = charChildren[i]
			end
		end

		if FoundTool == true and Tool ~= nil then
			ToolRange(Tool)
		else
			ErrorSound:Play()
			SendNotification("Error!", "Please equip a tool for command to work!", 5, "Okay")
			MakeNewTextPrint("Please equip a tool for command to work!")
			print("Please equip a tool for command to work!")
		end
	end

	if message == "/e setspawn" then
		SetSpawn()
	end

	if message == "/e flyjump" then
		FlyJump(true)
	elseif message == "/e unflyjump" then
		FlyJump(false)
	end

	if message == "/e sit" then
		Char.Humanoid.Sit = true
	end

	if message == "/e noclip" then
		Noclip(true)
	elseif message == "/e unnoclip" then
		Noclip(false)
	end

	if message == "/e partxray" then
		PartXray()
	elseif message == "/e unpartxray" then
		UnPartXray()
	end

	if message == "/e float" then
		Float(true)
	elseif message == "/e unfloat" then
		Float(false)
	end

	if message == "/e hideprints" then
		PrintNothing(600)
	end

	if message == "/e clearprints" then
		ClearPrints()
	end

	if message == "/e findWorkspace" then
		FindWorkspace()
		wait(0.1)
		print("Found a total of "..FoundItems.." items!")
		if FoundItems == 0 then
			MakeNewTextPrint("!!!No items found!!!")
		end
		FoundItems=0
	end

	for i=1,#Players do
		if message == "/e follow "..Players[i].Name or message == "/e follow "..Players[i].DisplayName then
			local FollowedTorso
			if Players[i].Character:FindFirstChild("UpperTorso") then
				FollowedTorso = Players[i].Character.UpperTorso
			else
				FollowedTorso = Players[i].Character.Torso
			end
			Follow(true, FollowedTorso)
		elseif message == "/e unfollow" then
			Follow(false, nil)
		elseif message == "/e to "..Players[i].Name or message == "/e to "..Players[i].DisplayName then
			TeleportTo(Players[i])
		elseif message == "/e headsit "..Players[i].Name or message == "/e heandsit "..Players[i].DisplayName then
			Headsit(Players[i])
		elseif message == "/e headstand "..Players[i].Name or message == "/e headstand "..Players[i].DisplayName then
			HeadStand(Players[i])
		end
	end

	for i=1,#WorkspaceChildren do
		if message == "/e followpart "..WorkspaceChildren[i].Name then
			local FollowedTorso
			if WorkspaceChildren[i]:FindFirstChild("UpperTorso") then
				FollowedTorso = WorkspaceChildren[i].UpperTorso
			elseif WorkspaceChildren[i]:IsA("Part") then
				FollowedTorso = WorkspaceChildren[i]
			else
				FollowedTorso = WorkspaceChildren[i].Torso
			end
			FollowNPC(true, FollowedTorso)
		elseif message == "/e unfollowpart" then
			FollowNPC(false, nil)
		end
	end

	for i=1,10000 do
		if message == "/e speed "..i then
			NotificationSound:Play()
			Char.Humanoid.WalkSpeed = i
		elseif message == "/e jumppower "..i then
			NotificationSound:Play()
			Char.Humanoid.JumpPower = i
		elseif message == "/e fly "..i then
			Fly(true, i)
		elseif message == "/e funny3 "..i then
			Funny3(true, i)
		elseif message == "/e spin "..i then
			Spin(true, i)
		elseif message == "/e tpwalk "..i then
			Tpwalk(true, i)
		elseif message == "/e funny4 "..i then
			Funny4(true, i)
		end
	end

	if message == "/e fly" then
		Fly(true, 2)
	elseif message == "/e unfly" then
		Fly(false, 0)
	elseif message == "/e spin" then
		Spin(true, 50)
	elseif message == "/e unspin" then
		Spin(false, 0)
	elseif message == "/e tpwalk" then
		Tpwalk(true, 2.5)
	elseif message == "/e untpwalk" then
		Tpwalk(false, 0)
	end
end)

local function StopCommands()
	Follow(false, nil)
	FollowNPC(false, nil)
	Float(false)
	FlyJump(false)
	Fly(false , 0)
	Noclip(false)
	Funny(false)
	Funny2(false)
	Funny3(false, 0)
	Funny4(false, 0)
	Tpwalk(false, 0)
	Spin(false, 0)
end

Player.CharacterRemoving:Connect(function()
	SendNotification("Please wait,", "Stuff are loading..", 5, "Okay")
	StopCommands()

	Char = Player.Character
	Head = Char.Head
	if Char:FindFirstChild("UpperTorso") then
		Torso = Char.UpperTorso
		LowerTorso = Char.LowerTorso
		UpperLeftArm = Char.LeftUpperArm
		LowerLeftArm = Char.LeftLowerArm
		LeftHand = Char.LeftHand
		UpperRightArm = Char.RightUpperArm
		LowerRightArm = Char.RightLowerArm
		RightHand = Char.RightHand
		UpperLeftLeg = Char.LeftUpperLeg
		LowerLeftLeg = Char.LeftLowerLeg
		LeftFoot = Char.LeftFoot
		UpperRightLeg = Char.RightUpperLeg
		LowerRightLeg = Char.RightLowerLeg
		RightFoot = Char.RightFoot
		R15 = true
	elseif Char:FindFirstChild("Torso") then
		Torso = Char.Torso
		RightArm = Char["Right Arm"]
		LeftArm = Char["Left Arm"]
		RightLeg =  Char["Right Leg"]
		LeftLeg = Char["Left Leg"]
		R15 = false
	end
	
	if spawnpos ~= nil then
		wait(2)
		print("hi")
		getRoot(Player.Character).CFrame = spawnpos
	end
end)

local TotalCommands = 0
for i=1,#cmds do
	local cmd = cmds[i]
	TotalCommands=TotalCommands+1
	MakeNewTextCommand(cmd)
end
TotalCommands=TotalCommands-2
MakeNewTextPrint("There is a total of "..TotalCommands.." commands! (V"..ScriptVersion..")")
print("There is a total of "..TotalCommands.." commands!")

dragify(MainFrame)

WhileWaitEvent.Event:Connect(function()
	while wait(1) do
		TimeUsedScript=TimeUsedScript+1
		TimeUsingScript.Text = "You have been using this script for "..TimeUsedScript.." seconds"
	end
end)

WhileWaitEvent:Fire()
LoadedSound:Play()
SendNotification("Script loaded!", "There is currently "..TotalCommands.." commands, Have fun!", 5, "Okay!")
wait(2)
SendNotification("Important!", "If you lose the ui type /e fixgui", 5, "Noted")
