NewestVersion = "1.0.15"
ScriptVersion = "1.0.15"
ScriptVersionCreationDate = "2023/1/21"

if FC_LOADED and CURRENT_FC_ENDED == false and not _G.FC_DEBUG == true then
	print([[Furs commands is already running!
	If you want to run a new one,
	first type in "endscript",
	then you relaunch furs commands!
	]])
	return
end
pcall(function() getgenv().FC_LOADED = true getgenv().CURRENT_FC_ENDED = false end)

game:GetService("StarterGui"):SetCore("SendNotification", {
	Title = "Important";
	Text = "This script is currently still being built! So it may be buggy or brake on death,";
	Duration = 5;
	Button1 = "Okay";
	Icon = "rbxassetid://11570895459";
})
game:GetService("StarterGui"):SetCore("SendNotification", {
	Title = "Script is loading..";
	Text = "Please wait..";
	Duration = 5;
	Button1 = "Alrighty";
	Icon = "rbxassetid://9417142960";
})

wait(wait(game:IsLoaded()))
wait(1)
Player = game.Players.LocalPlayer
Players = game:GetService("Players"):GetChildren()
ContextActionService = game:GetService("ContextActionService")
RunService = game:GetService("RunService")
StarterGui = game:GetService("StarterGui")
Playerss = game:GetService("Players")
UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
Settings = UserSettings()
GameSettings = Settings.GameSettings
WorkspaceChildren = workspace:GetChildren()
ReplicatedStorage = game.ReplicatedStorage
Camera = workspace.CurrentCamera
UIS = game:GetService("UserInputService")
PFS = game:GetService("PathfindingService")
Mouse = Player:GetMouse()
WhileWaitEvent = Instance.new("BindableEvent", Player)
SoundFolder = Instance.new("Folder", Workspace)
MusicFolder = Instance.new("Folder", SoundFolder)
TimeUsedScript = 0
R15 = false
Floating = false
Flinging = false
Following = true
Tpwalking = false
FlyJumping = false
Flying = false
Funnying = false
Funnying2 = false
Funnying3 = false
Funnying4 = false
Spinning = false
Tpwalking = false
ConstantFoving = false
ConstantSpeeding = false
ConstantJumpPowering = false
AutoJumping = false
ChatBypassing = false
PathFindFollowing = false
Viewing = false
IsTyping = false
IsDead = false
FakeChatMessage = nil
FakeChatAmount = 1
CommandListSearch = nil
spawnpos = nil
TotalCommands = 0

cmds ={
	"{{{{{{{ ClientSided Commands }}}}}}}",
	"newestversion (Used to check if script is upto date) {client}",
	"getnew (Use if you need latest version) {client}",
	"endscript {client}",
	"cmds {client}",
	"partxray {client}",
	"maxwell {client}",
	"hideprints {client}",
	"clearprints {client}",
	"findWorkspace {client}",
	"funny {client}",
	"funny2 {client}",
	"bighead {client}",
	"smallhead {client}",
	"normalhead {client}",
	"removehats {client}",
	"restorehats {client}",
	"fixgui (To position the ui if lost) {client}",
	"hidemain {client}",
	"showmain {client}",
	"firstperson {client}",
	"nightvision {client}",
	"day {client}",
	"night {client",
	"light {client}",
	"showplayerlist {client}",
	"showspamchat {client}",
	"Shift+P [Enables freecam] {client}",
	"view [Player you want to view] {client}",
	"fov [Number between 1-120 (70 defult)] {client}",
	"constantfov [Number between 1-120 (70 defult)] {client}",
	"fogcolor [Number between 1-156] {client}",
	"brightness [Number between 1-10000 (1 defult) {client}",
	"fogend [Number between 1-10000] {client}",
	"funny3 [Number between 1-10000] {client}",
	"hidespamchat {client}",
	"unconstantfov {client}",
	"unpartxray {client}",
	"unfunny {client}",
	"unfirstperson {client}",
	"unnightvision {client}",
	"unlight {client}",
	"hideplayerlist {client}",
	"unfunny2 {client}",
	"unfunny3 {client}",
	"unview {client}",
	"{{{{{{{ ServerSided Commands }}}}}}}",
	"vr [Uses script by Abacaxl @V3rmillion]",
	"float",
	"noclip",
	"sit",
	"flyjump",
	"setspawn",
	"toolrange",
	"rejoin",
	"respawn",
	"fling",
	"followpart [Model name showed in workspace]",
	"headsit [Player name or display]",
	"headstand [Player name or display]",
	"to [Player name or display]",
	"follow [Player name or display]",
	"pathfindfollow [Player name or display]",
	"speed [Number between 1-10000 (Defult 16)]",
	"jumppower [Number between 1-10000 (Defult 50)]",
	"constantspeed [Number between 1-10000]",
	"constantjumppower [Number between 1-10000]",
	"tpwalk [Number between 1-10000]",
	"spin [Number between 1-10000]",
	"fly [Number bewtween 1-10000 (Defult 2)]",
	"unpathfindfollow",
	"unfling",
	"unfloat",
	"unfollow",
	"unfollowpart",
	"unspin",
	"untpwalk",
	"unflyjump",
	"unfly",
	"unnoclip",
}

--Setup
MainGui = Instance.new("ScreenGui")
MainGui.Parent = Player.PlayerGui
MainGui.ResetOnSpawn = false
MainGui.Enabled = false

MainFrame = Instance.new("Frame", MainGui)
MainFrame.Position = UDim2.new(0.604, 0,0.561, 0)
MainFrame.Size = UDim2.new(0.395, 0,0.41, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(54, 54, 54)
UiCorner = Instance.new("UICorner", MainFrame)

SecondMainFrame = Instance.new("Frame", MainFrame)
SecondMainFrame.Position = UDim2.new(0, 0,0.115, 0)
SecondMainFrame.Size = UDim2.new(1, 0,0.885, 0)
SecondMainFrame.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
UiCorner = Instance.new("UICorner", SecondMainFrame)

MinimizeButton = Instance.new("TextButton", MainFrame)
MinimizeButton.Position = UDim2.new(0.883, 0,0, 0)
MinimizeButton.Size = UDim2.new(0.058, 0,0.115, 0)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(76, 76, 76)
MinimizeButton.Text = "-"
MinimizeButton.TextScaled = true
MinimizeButton.RichText = true
MinimizeButton.TextStrokeTransparency = 0
MinimizeButton.TextStrokeColor3 = Color3.fromRGB(255,255,255)
MinimizeButton.FontFace = Font.fromEnum(Enum.Font.Arcade)
UiCorner = Instance.new("UICorner", MinimizeButton)

CloseButton = Instance.new("TextButton", MainFrame)
CloseButton.Position = UDim2.new(0.942, 0,0, 0)
CloseButton.Size = UDim2.new(0.058, 0,0.115, 0)
CloseButton.BackgroundColor3 = Color3.fromRGB(102, 0, 0)
CloseButton.Text = "X"
CloseButton.TextScaled = true
CloseButton.RichText = true
CloseButton.TextStrokeTransparency = 0
CloseButton.TextStrokeColor3 = Color3.fromRGB(255,255,255)
CloseButton.FontFace = Font.fromEnum(Enum.Font.Arcade)
UiCorner = Instance.new("UICorner", CloseButton)

Title = Instance.new("TextLabel", MainFrame)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.Size = UDim2.new(0.942, 0,0.115, 0)
Title.BackgroundTransparency = 1
Title.Text = "Furs Commands"
Title.TextColor3 = Color3.new(0,0,0)
Title.TextStrokeTransparency = 0
Title.TextStrokeColor3 = Color3.fromRGB(255,255,255)
Title.FontFace = Font.fromEnum(Enum.Font.Arcade)
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.TextScaled = true
Title.RichText = true

PrintsFrame = Instance.new("ScrollingFrame", SecondMainFrame)
PrintsFrame.Position = UDim2.new(0.151, 0,0, 0)
PrintsFrame.Size = UDim2.new(0.849, 0,1, 0)
PrintsFrame.BackgroundTransparency = 1
PrintsFrame.CanvasSize = UDim2.new(0,0,10000,0)
PrintsFrame.Visible = false
UiListLayout = Instance.new("UIListLayout", PrintsFrame)

CommandsFrame = Instance.new("ScrollingFrame", SecondMainFrame)
CommandsFrame.Position = UDim2.new(0.151, 0,0, 0)
CommandsFrame.Size = UDim2.new(0.849, 0,1, 0)
CommandsFrame.BackgroundTransparency = 1
CommandsFrame.CanvasSize = UDim2.new(0,0,500,0)
CommandsFrame.Visible = false
UiListLayout = Instance.new("UIListLayout", CommandsFrame)

PlayerFrame = Instance.new("ScrollingFrame", SecondMainFrame)
PlayerFrame.Position = UDim2.new(0.151, 0,0, 0)
PlayerFrame.Size = UDim2.new(0.849, 0,1, 0)
PlayerFrame.BackgroundTransparency = 1
UiListLayout = Instance.new("UIListLayout", PlayerFrame)

ButtonFrame = Instance.new("Frame", SecondMainFrame)
ButtonFrame.Size = UDim2.new(0.151, 0,1, 0)
ButtonFrame.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
ButtonFrame.BackgroundTransparency = 0.5
UiCorner = Instance.new("UICorner", ButtonFrame)

UiListLayout = Instance.new("UIListLayout", ButtonFrame)
UiListLayout.Padding = UDim.new(0, 5)

PlayerButton = Instance.new("TextButton", ButtonFrame)
PlayerButton.Size = UDim2.new(1, 0,0.13, 0)
PlayerButton.BackgroundColor3 = Color3.fromRGB(100,100,100)
PlayerButton.Text = "Player"
PlayerButton.TextColor3 = Color3.fromRGB(0,0,0)
PlayerButton.TextStrokeTransparency = 0
PlayerButton.TextStrokeColor3 = Color3.fromRGB(255,255,255)
PlayerButton.TextScaled = true
UiCorner = Instance.new("UICorner", PlayerButton)

CommandsButton = Instance.new("TextButton", ButtonFrame)
CommandsButton.Size = UDim2.new(1, 0,0.13, 0)
CommandsButton.BackgroundColor3 = Color3.fromRGB(100,100,100)
CommandsButton.Text = "Cmds"
CommandsButton.TextColor3 = Color3.fromRGB(0,0,0)
CommandsButton.TextStrokeTransparency = 0
CommandsButton.TextStrokeColor3 = Color3.fromRGB(255,255,255)
CommandsButton.TextScaled = true
UiCorner = Instance.new("UICorner", CommandsButton)

PrintsButton = Instance.new("TextButton", ButtonFrame)
PrintsButton.Size = UDim2.new(1, 0,0.13, 0)
PrintsButton.BackgroundColor3 = Color3.fromRGB(100,100,100)
PrintsButton.Text = "Prints"
PrintsButton.TextColor3 = Color3.fromRGB(0,0,0)
PrintsButton.TextStrokeTransparency = 0
PrintsButton.TextStrokeColor3 = Color3.fromRGB(255,255,255)
PrintsButton.TextScaled = true
UiCorner = Instance.new("UICorner", PrintsButton)

NightVisionUi = Instance.new("ImageLabel", MainGui)
NightVisionUi.Image = "rbxassetid://7552884581"
NightVisionUi.Position = UDim2.new(0,0,-0.1,0)
NightVisionUi.Size = UDim2.new(1.1,0,1.1,0)
NightVisionUi.BackgroundTransparency = 1
NightVisionUi.Visible = false

CommandBar = Instance.new("TextBox", MainGui)
CommandBar.Position = UDim2.new(0.835, 0,0.971, 0)
CommandBar.Size = UDim2.new(0.165, 0,0.028, 0)
CommandBar.BackgroundTransparency = 0.2
CommandBar.BackgroundColor3 = Color3.fromRGB(56,56,56)
CommandBar.TextStrokeTransparency = 0
CommandBar.TextStrokeColor3 = Color3.fromRGB(255,255,255)
CommandBar.TextScaled = true
CommandBar.RichText = true
CommandBar.Text = "Press , to type in a command"
UiCorner = Instance.new("UICorner", CommandBar)

--FakeChat
FakeChatFrame = Instance.new("Frame", MainGui)
FakeChatFrame.Position = UDim2.new(-0, 0,0.717, 0)
FakeChatFrame.Size = UDim2.new(0.21, 0,0.283, 0)
FakeChatFrame.BackgroundColor3 = Color3.fromRGB(54, 54, 54)
FakeChatFrame.Visible = false
UiCorner = Instance.new("UICorner", FakeChatFrame)

FakeChatTitle = Instance.new("TextLabel", FakeChatFrame)
FakeChatTitle.Size = UDim2.new(1, 0,0.144, 0)
FakeChatTitle.BackgroundTransparency = 1
FakeChatTitle.Text = "Spam Chat"
FakeChatTitle.TextScaled = true
FakeChatTitle.TextXAlignment = Enum.TextXAlignment.Left
FakeChatTitle.TextStrokeColor3 = Color3.fromRGB(255,255,255)
FakeChatTitle.TextStrokeTransparency = 0

SecondFakeChatMainFrame = Instance.new("Frame", FakeChatFrame)
SecondFakeChatMainFrame.Position = UDim2.new(0,0,0.149,0)
SecondFakeChatMainFrame.Size = UDim2.new(1, 0,0.851, 0)
SecondFakeChatMainFrame.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
UiCorner = Instance.new("UICorner", SecondFakeChatMainFrame)

CloseFakeChatButton = Instance.new("TextButton", FakeChatFrame)
CloseFakeChatButton.Position = UDim2.new(0.901,0,0,0)
CloseFakeChatButton.Size = UDim2.new(0.099, 0,0.149, 0)
CloseFakeChatButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
CloseFakeChatButton.TextColor3 = Color3.fromRGB(255, 0, 0)
CloseFakeChatButton.Text = "X"
CloseFakeChatButton.TextScaled = true
UiCorner = Instance.new("UICorner", CloseFakeChatButton)

MessageFakeChatText = Instance.new("TextBox", SecondFakeChatMainFrame)
MessageFakeChatText.Position = UDim2.new(0.045, 0,0.127, 0)
MessageFakeChatText.Size = UDim2.new(0.643, 0,0.354, 0)
MessageFakeChatText.Text = "Spam chat using this :3"
MessageFakeChatText.TextScaled = true
MessageFakeChatText.ClearTextOnFocus = false
UiCorner = Instance.new("UICorner", MessageFakeChatText)

SpamFakeChatAmountText = Instance.new("TextBox", SecondFakeChatMainFrame)
SpamFakeChatAmountText.Position = UDim2.new(0.753, 0,0.127, 0)
SpamFakeChatAmountText.Size = UDim2.new(0.196, 0,0.354, 0)
SpamFakeChatAmountText.Text = "1"
SpamFakeChatAmountText.TextScaled = true
SpamFakeChatAmountText.ClearTextOnFocus = false
UiCorner = Instance.new("UICorner", SpamFakeChatAmountText)

ChatFakeChatButton = Instance.new("TextButton", SecondFakeChatMainFrame)
ChatFakeChatButton.Position = UDim2.new(0.102, 0,0.656, 0)
ChatFakeChatButton.Size = UDim2.new(0.345, 0,0.236, 0)
ChatFakeChatButton.BackgroundColor3 = Color3.fromRGB(24, 104, 0)
ChatFakeChatButton.TextColor3 = Color3.new(0,0,0)
ChatFakeChatButton.Text = "Chat"
ChatFakeChatButton.TextScaled = true
UiCorner = Instance.new("UICorner", ChatFakeChatButton)

SpamFakeChatAmountButton = Instance.new("TextButton", SecondFakeChatMainFrame)
SpamFakeChatAmountButton.Position = UDim2.new(0.551, 0,0.656, 0)
SpamFakeChatAmountButton.Size = UDim2.new(0.345, 0,0.236, 0)
SpamFakeChatAmountButton.BackgroundColor3 = Color3.fromRGB(24, 104, 0)
SpamFakeChatAmountButton.TextColor3 = Color3.new(0,0,0)
SpamFakeChatAmountButton.Text = "Amount"
SpamFakeChatAmountButton.TextScaled = true
UiCorner = Instance.new("UICorner", SpamFakeChatAmountButton)

--CommandList
CommandListFrame = Instance.new("Frame", MainGui)
CommandListFrame.Position = UDim2.new(-0, 0,0.60, 0)
CommandListFrame.Size = UDim2.new(0.326, 0,0.409, 0)
CommandListFrame.BackgroundColor3 = Color3.fromRGB(54, 54, 54)
CommandListFrame.Visible = false
UiCorner = Instance.new("UICorner", CommandListFrame)

CommandListCloseButton = Instance.new("TextButton", CommandListFrame)
CommandListCloseButton.Position = UDim2.new(0.901,0,0,0)
CommandListCloseButton.Size = UDim2.new(0.099, 0,0.149, 0)
CommandListCloseButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
CommandListCloseButton.TextColor3 = Color3.fromRGB(255, 0, 0)
CommandListCloseButton.Text = "X"
CommandListCloseButton.TextScaled = true
UiCorner = Instance.new("UICorner", CommandListCloseButton)

CommandListTitle = Instance.new("TextLabel", CommandListFrame)
CommandListTitle.Size = UDim2.new(1, 0,0.144, 0)
CommandListTitle.BackgroundTransparency = 1
CommandListTitle.Text = "Command List"
CommandListTitle.TextScaled = true
CommandListTitle.TextXAlignment = Enum.TextXAlignment.Left
CommandListTitle.TextStrokeColor3 = Color3.fromRGB(255,255,255)
CommandListTitle.TextStrokeTransparency = 0

CommandListSecondMainFrame = Instance.new("Frame", CommandListFrame)
CommandListSecondMainFrame.Position = UDim2.new(-0.003, 0,0.149, 0)
CommandListSecondMainFrame.Size = UDim2.new(1, 0,0.851, 0)
CommandListSecondMainFrame.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
UiCorner = Instance.new("UICorner", CommandListSecondMainFrame)

CommandListScrollingFrame = Instance.new("ScrollingFrame", CommandListSecondMainFrame)
CommandListScrollingFrame.Position = UDim2.new(0, 0,0.145, 0)
CommandListScrollingFrame.Size = UDim2.new(1, 0,0.855, 0)
CommandListScrollingFrame.BackgroundTransparency = 1
CommandListScrollingFrame.CanvasSize = UDim2.new(0,0,500,0)
UiListLayout = Instance.new("UIListLayout", CommandListScrollingFrame)

CommandListSearchBar = Instance.new("TextBox", CommandListSecondMainFrame)
CommandListSearchBar.Size = UDim2.new(1, 0,0.140, 0)
CommandListSearchBar.BackgroundTransparency = 0.5
CommandListSearchBar.BackgroundColor3 = Color3.fromRGB(56, 56, 56)
CommandListSearchBar.Text = "Search"
CommandListSearchBar.TextScaled = true
CommandListSearchBar.TextStrokeColor3 = Color3.fromRGB(255,255,255)
CommandListSearchBar.TextStrokeTransparency = 0
UiListLayout = Instance.new("UIListLayout", CommandListSearchBar)

--Player List
PlayerListFrame = Instance.new("Frame", MainGui)
PlayerListFrame.Position = UDim2.new(-0, 0,0.59, 0)
PlayerListFrame.Size = UDim2.new(0.236, 0,0.409, 0)
PlayerListFrame.BackgroundColor3 = Color3.fromRGB(54, 54, 54)
PlayerListFrame.Visible = false
UiCorner = Instance.new("UICorner", PlayerListFrame)

PlayerListCloseButton = Instance.new("TextButton", PlayerListFrame)
PlayerListCloseButton.Position = UDim2.new(0.901,0,0,0)
PlayerListCloseButton.Size = UDim2.new(0.099, 0,0.149, 0)
PlayerListCloseButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
PlayerListCloseButton.TextColor3 = Color3.fromRGB(255, 0, 0)
PlayerListCloseButton.Text = "X"
PlayerListCloseButton.TextScaled = true
UiCorner = Instance.new("UICorner", PlayerListCloseButton)

PlayerListTitle = Instance.new("TextLabel", PlayerListFrame)
PlayerListTitle.Size = UDim2.new(1, 0,0.144, 0)
PlayerListTitle.BackgroundTransparency = 1
PlayerListTitle.Text = "Players"
PlayerListTitle.TextScaled = true
PlayerListTitle.TextXAlignment = Enum.TextXAlignment.Left
PlayerListTitle.TextStrokeColor3 = Color3.fromRGB(255,255,255)
PlayerListTitle.TextStrokeTransparency = 0

PlayerListSecondFrame = Instance.new("Frame", PlayerListFrame)
PlayerListSecondFrame.Position = UDim2.new(0, 0,0.149, 0)
PlayerListSecondFrame.Size = UDim2.new(1, 0,0.851, 0)
PlayerListSecondFrame.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
UiCorner = Instance.new("UICorner", PlayerListSecondFrame)

PlayerListScrollingFrame = Instance.new("ScrollingFrame", PlayerListSecondFrame)
PlayerListScrollingFrame.Position = UDim2.new(0, 0,0.145, 0)
PlayerListScrollingFrame.Size = UDim2.new(1, 0,0.863, 0)
PlayerListScrollingFrame.BackgroundTransparency = 1
PlayerListScrollingFrame.CanvasSize = UDim2.new(0,0,125,0)
UiListLayout = Instance.new("UIListLayout", PlayerListScrollingFrame)

--Ui PlayerData
PlayerName = Instance.new("TextLabel", PlayerFrame)
PlayerName.Size = UDim2.new(0.98, 0,0.1, 0)
PlayerName.BackgroundTransparency = 1
PlayerName.Text = "Hello, "..Player.Name.."! ("..Player.DisplayName..")"
PlayerName.TextColor3 = Color3.fromRGB(0,0,0)
PlayerName.TextStrokeTransparency = 0
PlayerName.TextStrokeColor3 = Color3.fromRGB(255,255,255)
PlayerName.TextScaled = true
PlayerName.RichText = true

AccountAge = Instance.new("TextLabel", PlayerFrame)
AccountAge.Size = UDim2.new(0.98, 0,0.05, 0)
AccountAge.BackgroundTransparency = 1
AccountAge.Text = "Account age: "..Player.AccountAge.." Days"
AccountAge.TextColor3 = Color3.new(0,0,0)
AccountAge.TextStrokeTransparency = 0
AccountAge.TextStrokeColor3 = Color3.new(1,1,1)
AccountAge.TextScaled = true
AccountAge.RichText = true

TimeUsingScript = Instance.new("TextLabel", PlayerFrame)
TimeUsingScript.Size = UDim2.new(0.98, 0,0.05, 0)
TimeUsingScript.BackgroundTransparency = 1
TimeUsingScript.Text = "You have been using this script for "..TimeUsedScript.." seconds"
TimeUsingScript.TextColor3 = Color3.new(0,0,0)
TimeUsingScript.TextStrokeTransparency = 0
TimeUsingScript.TextStrokeColor3 = Color3.new(1,1,1)
TimeUsingScript.TextScaled = true
TimeUsingScript.RichText = true

GameName = Instance.new("TextLabel", PlayerFrame)
GameName.Size = UDim2.new(0.98, 0,0.05, 0)
GameName.BackgroundTransparency = 1
GameName.Text = "Game Name: "..game.MarketplaceService:GetProductInfo(game.PlaceId, Enum.InfoType.Asset).Name.." ("..game.MarketplaceService:GetProductInfo(game.PlaceId, Enum.InfoType.Asset).AssetId..")"
GameName.TextColor3 = Color3.new(0,0,0)
GameName.TextStrokeTransparency = 0
GameName.TextStrokeColor3 = Color3.new(1,1,1)
GameName.TextScaled = true
GameName.RichText = true

GameCreation = Instance.new("TextLabel", PlayerFrame)
GameCreation.Size = UDim2.new(0.98, 0,0.05, 0)
GameCreation.BackgroundTransparency = 1
GameCreation.Text = "Game created at: "..game.MarketplaceService:GetProductInfo(game.PlaceId, Enum.InfoType.Asset).Created
GameCreation.TextColor3 = Color3.new(0,0,0)
GameCreation.TextStrokeTransparency = 0
GameCreation.TextStrokeColor3 = Color3.new(1,1,1)
GameCreation.TextScaled = true
GameCreation.RichText = true

GameUpdate = Instance.new("TextLabel", PlayerFrame)
GameUpdate.Size = UDim2.new(0.98, 0,0.05, 0)
GameUpdate.BackgroundTransparency = 1
GameUpdate.Text = "Game updated at: "..game.MarketplaceService:GetProductInfo(game.PlaceId, Enum.InfoType.Asset).Updated
GameUpdate.TextColor3 = Color3.new(0,0,0)
GameUpdate.TextStrokeTransparency = 0
GameUpdate.TextStrokeColor3 = Color3.new(1,1,1)
GameUpdate.TextScaled = true
GameUpdate.RichText = true

CreatorName = Instance.new("TextLabel", PlayerFrame)
CreatorName.Size = UDim2.new(0.98, 0,0.05, 0)
CreatorName.BackgroundTransparency = 1
CreatorName.Text = "Creator: "..game.MarketplaceService:GetProductInfo(game.PlaceId, Enum.InfoType.Asset).Creator.Name.." ("..game.MarketplaceService:GetProductInfo(game.PlaceId, Enum.InfoType.Asset).Creator.CreatorTargetId..")"
CreatorName.TextColor3 = Color3.new(0,0,0)
CreatorName.TextStrokeTransparency = 0
CreatorName.TextStrokeColor3 = Color3.new(1,1,1)
CreatorName.TextScaled = true
CreatorName.RichText = true

NotificationSound = Instance.new("Sound", SoundFolder)
NotificationSound.SoundId = "rbxassetid://6647898215"
NotificationSound2 = Instance.new("Sound", SoundFolder)
NotificationSound2.SoundId = "rbxassetid://6647897822"
FunnyNotificationSound = Instance.new("Sound", SoundFolder)
FunnyNotificationSound.SoundId = "rbxassetid://9125845655"
DiedSound = Instance.new("Sound", SoundFolder)
DiedSound.SoundId = "rbxassetid://6598984092"
ErrorSound = Instance.new("Sound", SoundFolder)
ErrorSound.SoundId = "rbxassetid://9066063340"
NightVisionSound = Instance.new("Sound", SoundFolder)
NightVisionSound.SoundId = "rbxassetid://376178316"
ClickSound = Instance.new("Sound", SoundFolder)
ClickSound.SoundId = "rbxassetid://6895079853"
LoadedSound = Instance.new("Sound", SoundFolder)
LoadedSound.SoundId = "rbxassetid://7383525713"

--Getting character
--Char = Player.Character
--Head = Player.Character.Head

--if Player.Character:FindFirstChild("UpperTorso") then
--	Torso = Player.Character.UpperTorso
--	LowerTorso = Player.Character.LowerTorso
--	UpperLeftArm = Player.Character.LeftUpperArm
--	LowerLeftArm = Player.Character.LeftLowerArm
--	LeftHand = Player.Character.LeftHand
--	UpperRightArm = Player.Character.RightUpperArm
--	LowerRightArm = Player.Character.RightLowerArm
--	RightHand = Player.Character.RightHand
--	UpperLeftLeg = Player.Character.LeftUpperLeg
--	LowerLeftLeg = Player.Character.LeftLowerLeg
--	LeftFoot = Player.Character.LeftFoot
--	UpperRightLeg = Player.Character.RightUpperLeg
--	LowerRightLeg = Player.Character.RightLowerLeg
--	RightFoot = Player.Character.RightFoot
--	R15 = true
--elseif Player.Character:FindFirstChild("Torso") then
--	Torso = Player.Character.Torso
--	RightArm = Player.Character["Right Arm"]
--	LeftArm = Player.Character["Left Arm"]
--	RightLeg =  Player.Character["Right Leg"]
--	LeftLeg = Player.Character["Left Leg"]
--	R15 = false
--end

_G.DataTable = {
	
}
Data = _G.DataTable
fileName = "Furs_Cmds_Data"

function saveData()
	local json
	if (writefile) then
		json = HttpService:JSONEncode(Data)
		writefile(fileName, json)
	elseif WriteFileError == false then
		WriteFileError = true
		SendNotifcation("Error!", "Your executor is not supported to save data! (Type /console for more info)", 15, nil, nil)
		warn([[Error!
		Your executor is not supported to run this function!
		Your data made in this game will NOT save
		It is reconmmended to use a executor that has ( writefile ) for a better experience!]])
	end
end

function loadData()
	if (readfile) then
		if pcall(function() readfile(fileName) end) then
			if readfile(fileName) ~= nil then
				local success, response = pcall(function()
					_G.DataTable = HttpService:JSONDecode(readfile(fileName))
				end)
				if not success then
					warn("Save data error:", response)
					warn("Overwriting save file")
					local json = HttpService:JSONEncode(Data)
					writefile(fileName, json)
				end
			else
				local json = HttpService:JSONEncode(Data)
				writefile(fileName, json)
			end
		else
			local json = HttpService:JSONEncode(Data)
			writefile(fileName, json)
		end
	elseif ReadFileError == false then
		SendNotifcation("Error!", "Your executor is not supported to load data! (Type /console for more info)", 15, nil, nil)
		warn([[Error!
		Your executor is not supported to run this function!
		Your data made in this game will NOT load
		It is reconmmended to use a executor that has ( readfile ) for a better experience!]])
	end
end
--loadData()

--unknown functions
MinimizeButton.MouseButton1Click:Connect(function()
	ClickSound:Play()
	if SecondMainFrame.Visible == true then
		SecondMainFrame.Visible = false
		MainFrame.Size = UDim2.new(0.125, 0,0.041, 0)
		MinimizeButton.Size = UDim2.new(0.11, 0,1, 0)
		MinimizeButton.Position = MinimizeButton.Position - UDim2.new(0.05,0,0)
		CloseButton.Size = UDim2.new(0.11, 0,1, 0)
		Title.Size = UDim2.new(0.942, 0,1, 0)
	else
		SecondMainFrame.Visible = true
		MainFrame.Size = UDim2.new(0.395, 0,0.41, 0)
		MinimizeButton.Size = UDim2.new(0.058, 0,0.115, 0)
		MinimizeButton.Position = MinimizeButton.Position + UDim2.new(0.05,0,0)
		CloseButton.Size = UDim2.new(0.058, 0,0.115, 0)
		Title.Size = UDim2.new(0.942, 0,0.115, 0)
	end
end)

CloseButton.MouseButton1Click:Connect(function()
	ClickSound:Play()
	MainFrame.Visible = false
end)

PlayerButton.MouseButton1Click:Connect(function()
	ClickSound:Play()
	CommandsFrame.Visible = false
	PrintsFrame.Visible = false
	PlayerFrame.Visible = true
end)

CommandsButton.MouseButton1Click:Connect(function()
	ClickSound:Play()
	CommandsFrame.Visible = true
	PrintsFrame.Visible = false
	PlayerFrame.Visible = false
end)

PrintsButton.MouseButton1Click:Connect(function()
	ClickSound:Play()
	CommandsFrame.Visible = false
	PrintsFrame.Visible = true
	PlayerFrame.Visible = false
end)

UIS.TextBoxFocused:Connect(function()
	IsTyping = true
end)

UIS.TextBoxFocusReleased:Connect(function()
	IsTyping = false
end)

UIS.InputBegan:Connect(function(input,gameProcessed)
	if input.KeyCode == Enum.KeyCode.Comma and IsTyping == false then
		wait()
		CommandBar:CaptureFocus()
		local Selected = true
		while Selected == true do
			wait()
			CommandBar.FocusLost:Connect(function()
				Selected = false
			end)
		end
		CommandBar.Text = "Press , to type in a command"
	end
end)

ForceStop = false
SpamFakeChatAmountButton.MouseButton1Click:Connect(function()
	ClickSound:Play()
	if SpamFakeChatAmountButton.Text == "Amount" then
		local Amount = FakeChatAmount
		SpamFakeChatAmountButton.Text = "Stop"
		SpamFakeChatAmountButton.BackgroundColor3 = Color3.fromRGB(255,0,0)
		repeat
			wait()
			ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(FakeChatMessage, "All")
			Amount=Amount-1
		until Amount == 0 or ForceStop == true
		wait(1)
		SpamFakeChatAmountButton.Text = "Amount"
		SpamFakeChatAmountButton.BackgroundColor3 = Color3.fromRGB(24, 104, 0)
	else
		SpamFakeChatAmountButton.Text = "Stopping.."
		SpamFakeChatAmountButton.BackgroundColor3 = Color3.fromRGB(255,0,0)
		ForceStop = true
		wait(1)
		ForceStop = false
	end
end)

ChatFakeChatButton.MouseButton1Click:Connect(function()
	ClickSound:Play()
	ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(FakeChatMessage, "All")
end)

MessageFakeChatText.FocusLost:Connect(function()
	FakeChatMessage = MessageFakeChatText.Text
	if FakeChatMessage == "" then
		MessageFakeChatText.Text = "No message here xd (Chat will not show)"
	end
end)

SpamFakeChatAmountText.FocusLost:Connect(function()
	FakeChatAmount = SpamFakeChatAmountText.Text
end)

CloseFakeChatButton.MouseButton1Click:Connect(function()
	ClickSound:Play()
	FakeChatFrame.Visible = false
	FakeChatFrame.Position = UDim2.new(-0, 0,0.717, 0)
end)

CommandListCloseButton.MouseButton1Click:Connect(function()
	ClickSound:Play()
	CommandListFrame.Visible = false
end)

CommandListSearchBar.FocusLost:Connect(function()
	CommandListSearch = CommandListSearchBar.Text
	if CommandListSearch == "" then
		CommandListSearchBar.Text = "Search"
	end
	
	for _, command in pairs(cmds) do
		if command:find(CommandListSearch:lower()) then
			local C = CommandListScrollingFrame:GetChildren()
			for _, Cmd in pairs(C) do
				if Cmd:IsA("TextLabel") and Cmd.Text == command then
					Cmd.Visible = true
				end
			end
		else
			local C = CommandListScrollingFrame:GetChildren()
			for _, Cmd in pairs(C) do
				if Cmd:IsA("TextLabel") and Cmd.Text == command then
					Cmd.Visible = false
				end
			end
		end
	end
end)

PlayerListCloseButton.MouseButton1Click:Connect(function()
	ClickSound:Play()
	PlayerListFrame.Visible = false
end)

for _, Playerr in pairs(Players) do
	local TextLable = Instance.new("TextLabel", PlayerListScrollingFrame)
	TextLable.Name = Playerr.Name
	TextLable.Size = UDim2.new(0.95, 0,0.001425, 0)
	TextLable.Text = Playerr.Name.." ("..Playerr.DisplayName..")"
	TextLable.TextScaled = true
	TextLable.TextColor3 = Color3.fromRGB(255,255,255)
	TextLable.TextStrokeTransparency = 0
end

Playerss.PlayerAdded:Connect(function(Plr)
	local TextLable = Instance.new("TextLabel", PlayerListScrollingFrame)
	TextLable.Name = Plr.Name
	TextLable.Size = UDim2.new(0.95, 0,0.001425, 0)
	TextLable.Text = Plr.Name.." ("..Plr.DisplayName..")"
	TextLable.TextScaled = true
	TextLable.TextColor3 = Color3.fromRGB(255,255,255)
	TextLable.TextStrokeTransparency = 0
end)

Playerss.PlayerRemoving:Connect(function(Plr)
	local C = PlayerListScrollingFrame:GetChildren()
	for _, TextLabel in pairs(C) do
		if TextLabel:IsA("TextLabel") then
			if TextLabel.Name == Plr.Name then
				TextLabel:Remove()
			end
		end
	end
end)

--Freecam
pi    = math.pi
abs   = math.abs
clamp = math.clamp
exp   = math.exp
rad   = math.rad
sign  = math.sign
sqrt  = math.sqrt
tan   = math.tan

LocalPlayer = Playerss.LocalPlayer
if not LocalPlayer then
	Playerss:GetPropertyChangedSignal("LocalPlayer"):Wait()
	LocalPlayer = Playerss.LocalPlayer
end

Camera = Workspace.CurrentCamera
Workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
	local newCamera = Workspace.CurrentCamera
	if newCamera then
		Camera = newCamera
	end
end)

FFlagUserExitFreecamBreaksWithShiftlock = nil
do
	local success, result = pcall(function()
		return UserSettings():IsUserFeatureEnabled("UserExitFreecamBreaksWithShiftlock")
	end)
	FFlagUserExitFreecamBreaksWithShiftlock = success and result
end

------------------------------------------------------------------------

TOGGLE_INPUT_PRIORITY = Enum.ContextActionPriority.Low.Value
INPUT_PRIORITY = Enum.ContextActionPriority.High.Value
FREECAM_MACRO_KB = {Enum.KeyCode.LeftShift, Enum.KeyCode.P}

NAV_GAIN = Vector3.new(1, 1, 1)*64
PAN_GAIN = Vector2.new(0.75, 1)*8
FOV_GAIN = 300

PITCH_LIMIT = rad(90)

VEL_STIFFNESS = 1.5
PAN_STIFFNESS = 1.0
FOV_STIFFNESS = 4.0

------------------------------------------------------------------------

Spring = {} do
	Spring.__index = Spring

	function Spring.new(freq, pos)
		local self = setmetatable({}, Spring)
		self.f = freq
		self.p = pos
		self.v = pos*0
		return self
	end

	function Spring:Update(dt, goal)
		local f = self.f*2*pi
		local p0 = self.p
		local v0 = self.v

		local offset = goal - p0
		local decay = exp(-f*dt)

		local p1 = goal + (v0*dt - offset*(f*dt + 1))*decay
		local v1 = (f*dt*(offset*f - v0) + v0)*decay

		self.p = p1
		self.v = v1

		return p1
	end

	function Spring:Reset(pos)
		self.p = pos
		self.v = pos*0
	end
end

------------------------------------------------------------------------

cameraPos = Vector3.new()
cameraRot = Vector2.new()
cameraFov = 0

velSpring = Spring.new(VEL_STIFFNESS, Vector3.new())
panSpring = Spring.new(PAN_STIFFNESS, Vector2.new())
fovSpring = Spring.new(FOV_STIFFNESS, 0)

------------------------------------------------------------------------

Input = {} do
	local thumbstickCurve do
		local K_CURVATURE = 2.0
		local K_DEADZONE = 0.15

		local function fCurve(x)
			return (exp(K_CURVATURE*x) - 1)/(exp(K_CURVATURE) - 1)
		end

		local function fDeadzone(x)
			return fCurve((x - K_DEADZONE)/(1 - K_DEADZONE))
		end

		function thumbstickCurve(x)
			return sign(x)*clamp(fDeadzone(abs(x)), 0, 1)
		end
	end

	gamepad = {
		ButtonX = 0,
		ButtonY = 0,
		DPadDown = 0,
		DPadUp = 0,
		ButtonL2 = 0,
		ButtonR2 = 0,
		Thumbstick1 = Vector2.new(),
		Thumbstick2 = Vector2.new(),
	}

	keyboard = {
		W = 0,
		A = 0,
		S = 0,
		D = 0,
		E = 0,
		Q = 0,
		U = 0,
		H = 0,
		J = 0,
		K = 0,
		I = 0,
		Y = 0,
		Up = 0,
		Down = 0,
		LeftShift = 0,
		RightShift = 0,
	}

	mouse = {
		Delta = Vector2.new(),
		MouseWheel = 0,
	}

	NAV_GAMEPAD_SPEED  = Vector3.new(1, 1, 1)
	NAV_KEYBOARD_SPEED = Vector3.new(1, 1, 1)
	PAN_MOUSE_SPEED    = Vector2.new(1, 1)*(pi/64)
	PAN_GAMEPAD_SPEED  = Vector2.new(1, 1)*(pi/8)
	FOV_WHEEL_SPEED    = 1.0
	FOV_GAMEPAD_SPEED  = 0.25
	NAV_ADJ_SPEED      = 0.75
	NAV_SHIFT_MUL      = 0.25

	navSpeed = 1

	function Input.Vel(dt)
		navSpeed = clamp(navSpeed + dt*(keyboard.Up - keyboard.Down)*NAV_ADJ_SPEED, 0.01, 4)

		local kGamepad = Vector3.new(
			thumbstickCurve(gamepad.Thumbstick1.X),
			thumbstickCurve(gamepad.ButtonR2) - thumbstickCurve(gamepad.ButtonL2),
			thumbstickCurve(-gamepad.Thumbstick1.Y)
		)*NAV_GAMEPAD_SPEED

		local kKeyboard = Vector3.new(
			keyboard.D - keyboard.A + keyboard.K - keyboard.H,
			keyboard.E - keyboard.Q + keyboard.I - keyboard.Y,
			keyboard.S - keyboard.W + keyboard.J - keyboard.U
		)*NAV_KEYBOARD_SPEED

		local shift = UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) or UserInputService:IsKeyDown(Enum.KeyCode.RightShift)

		return (kGamepad + kKeyboard)*(navSpeed*(shift and NAV_SHIFT_MUL or 1))
	end

	function Input.Pan(dt)
		local kGamepad = Vector2.new(
			thumbstickCurve(gamepad.Thumbstick2.Y),
			thumbstickCurve(-gamepad.Thumbstick2.X)
		)*PAN_GAMEPAD_SPEED
		local kMouse = mouse.Delta*PAN_MOUSE_SPEED
		mouse.Delta = Vector2.new()
		return kGamepad + kMouse
	end

	function Input.Fov(dt)
		local kGamepad = (gamepad.ButtonX - gamepad.ButtonY)*FOV_GAMEPAD_SPEED
		local kMouse = mouse.MouseWheel*FOV_WHEEL_SPEED
		mouse.MouseWheel = 0
		return kGamepad + kMouse
	end

	do
		function Keypress(action, state, input)
			keyboard[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
			return Enum.ContextActionResult.Sink
		end

		function GpButton(action, state, input)
			gamepad[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
			return Enum.ContextActionResult.Sink
		end

		function MousePan(action, state, input)
			local delta = input.Delta
			mouse.Delta = Vector2.new(-delta.y, -delta.x)
			return Enum.ContextActionResult.Sink
		end

		function Thumb(action, state, input)
			gamepad[input.KeyCode.Name] = input.Position
			return Enum.ContextActionResult.Sink
		end

		function Trigger(action, state, input)
			gamepad[input.KeyCode.Name] = input.Position.z
			return Enum.ContextActionResult.Sink
		end

		function MouseWheel(action, state, input)
			mouse[input.UserInputType.Name] = -input.Position.z
			return Enum.ContextActionResult.Sink
		end

		function Zero(t)
			for k, v in pairs(t) do
				t[k] = v*0
			end
		end

		function Input.StartCapture()
			ContextActionService:BindActionAtPriority("FreecamKeyboard", Keypress, false, INPUT_PRIORITY,
				Enum.KeyCode.W, Enum.KeyCode.U,
				Enum.KeyCode.A, Enum.KeyCode.H,
				Enum.KeyCode.S, Enum.KeyCode.J,
				Enum.KeyCode.D, Enum.KeyCode.K,
				Enum.KeyCode.E, Enum.KeyCode.I,
				Enum.KeyCode.Q, Enum.KeyCode.Y,
				Enum.KeyCode.Up, Enum.KeyCode.Down
			)
			ContextActionService:BindActionAtPriority("FreecamMousePan",          MousePan,   false, INPUT_PRIORITY, Enum.UserInputType.MouseMovement)
			ContextActionService:BindActionAtPriority("FreecamMouseWheel",        MouseWheel, false, INPUT_PRIORITY, Enum.UserInputType.MouseWheel)
			ContextActionService:BindActionAtPriority("FreecamGamepadButton",     GpButton,   false, INPUT_PRIORITY, Enum.KeyCode.ButtonX, Enum.KeyCode.ButtonY)
			ContextActionService:BindActionAtPriority("FreecamGamepadTrigger",    Trigger,    false, INPUT_PRIORITY, Enum.KeyCode.ButtonR2, Enum.KeyCode.ButtonL2)
			ContextActionService:BindActionAtPriority("FreecamGamepadThumbstick", Thumb,      false, INPUT_PRIORITY, Enum.KeyCode.Thumbstick1, Enum.KeyCode.Thumbstick2)
		end

		function Input.StopCapture()
			navSpeed = 1
			Zero(gamepad)
			Zero(keyboard)
			Zero(mouse)
			ContextActionService:UnbindAction("FreecamKeyboard")
			ContextActionService:UnbindAction("FreecamMousePan")
			ContextActionService:UnbindAction("FreecamMouseWheel")
			ContextActionService:UnbindAction("FreecamGamepadButton")
			ContextActionService:UnbindAction("FreecamGamepadTrigger")
			ContextActionService:UnbindAction("FreecamGamepadThumbstick")
		end
	end
end

function GetFocusDistance(cameraFrame)
	local znear = 0.1
	local viewport = Camera.ViewportSize
	local projy = 2*tan(cameraFov/2)
	local projx = viewport.x/viewport.y*projy
	local fx = cameraFrame.rightVector
	local fy = cameraFrame.upVector
	local fz = cameraFrame.lookVector

	local minVect = Vector3.new()
	local minDist = 512

	for x = 0, 1, 0.5 do
		for y = 0, 1, 0.5 do
			local cx = (x - 0.5)*projx
			local cy = (y - 0.5)*projy
			local offset = fx*cx - fy*cy + fz
			local origin = cameraFrame.p + offset*znear
			local _, hit = Workspace:FindPartOnRay(Ray.new(origin, offset.unit*minDist))
			local dist = (hit - origin).magnitude
			if minDist > dist then
				minDist = dist
				minVect = offset.unit
			end
		end
	end

	return fz:Dot(minVect)*minDist
end

------------------------------------------------------------------------

function StepFreecam(dt)
	local vel = velSpring:Update(dt, Input.Vel(dt))
	local pan = panSpring:Update(dt, Input.Pan(dt))
	local fov = fovSpring:Update(dt, Input.Fov(dt))

	local zoomFactor = sqrt(tan(rad(70/2))/tan(rad(cameraFov/2)))

	cameraFov = clamp(cameraFov + fov*FOV_GAIN*(dt/zoomFactor), 1, 120)
	cameraRot = cameraRot + pan*PAN_GAIN*(dt/zoomFactor)
	cameraRot = Vector2.new(clamp(cameraRot.x, -PITCH_LIMIT, PITCH_LIMIT), cameraRot.y%(2*pi))

	local cameraCFrame = CFrame.new(cameraPos)*CFrame.fromOrientation(cameraRot.x, cameraRot.y, 0)*CFrame.new(vel*NAV_GAIN*dt)
	cameraPos = cameraCFrame.p

	Camera.CFrame = cameraCFrame
	Camera.Focus = cameraCFrame*CFrame.new(0, 0, -GetFocusDistance(cameraCFrame))
	Camera.FieldOfView = cameraFov
end

function CheckMouseLockAvailability()
	local devAllowsMouseLock = Playerss.LocalPlayer.DevEnableMouseLock
	local devMovementModeIsScriptable = Playerss.LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.Scriptable
	local userHasMouseLockModeEnabled = GameSettings.ControlMode == Enum.ControlMode.MouseLockSwitch
	local userHasClickToMoveEnabled =  GameSettings.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove
	local MouseLockAvailable = devAllowsMouseLock and userHasMouseLockModeEnabled and not userHasClickToMoveEnabled and not devMovementModeIsScriptable

	return MouseLockAvailable
end

------------------------------------------------------------------------

PlayerState = {} do
	local mouseBehavior
	local mouseIconEnabled
	local cameraType
	local cameraFocus
	local cameraCFrame
	local cameraFieldOfView
	local screenGuis = {}
	local coreGuis = {
		Backpack = true,
		Chat = true,
		Health = true,
		PlayerList = true,
	}
	setCores = {
		BadgesNotificationsActive = true,
		PointsNotificationsActive = true,
	}

	-- Save state and set up for freecam
	function PlayerState.Push()
		for name in pairs(coreGuis) do
			coreGuis[name] = StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType[name])
			StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType[name], false)
		end
		for name in pairs(setCores) do
			setCores[name] = StarterGui:GetCore(name)
			StarterGui:SetCore(name, false)
		end
		local playergui = LocalPlayer:FindFirstChildOfClass("PlayerGui")
		if playergui then
			for _, gui in pairs(playergui:GetChildren()) do
				if gui:IsA("ScreenGui") and gui.Enabled then
					screenGuis[#screenGuis + 1] = gui
					gui.Enabled = false
				end
			end
		end

		cameraFieldOfView = Camera.FieldOfView
		Camera.FieldOfView = 70

		cameraType = Camera.CameraType
		Camera.CameraType = Enum.CameraType.Custom

		cameraCFrame = Camera.CFrame
		cameraFocus = Camera.Focus

		mouseIconEnabled = UserInputService.MouseIconEnabled
		UserInputService.MouseIconEnabled = false

		if FFlagUserExitFreecamBreaksWithShiftlock and CheckMouseLockAvailability() then
			mouseBehavior = Enum.MouseBehavior.Default
		else
			mouseBehavior = UserInputService.MouseBehavior
		end
		UserInputService.MouseBehavior = Enum.MouseBehavior.Default
	end

	-- Restore state
	function PlayerState.Pop()
		for name, isEnabled in pairs(coreGuis) do
			StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType[name], isEnabled)
		end
		for name, isEnabled in pairs(setCores) do
			StarterGui:SetCore(name, isEnabled)
		end
		for _, gui in pairs(screenGuis) do
			if gui.Parent then
				gui.Enabled = true
			end
		end

		Camera.FieldOfView = cameraFieldOfView
		cameraFieldOfView = nil

		Camera.CameraType = cameraType
		cameraType = nil

		Camera.CFrame = cameraCFrame
		cameraCFrame = nil

		Camera.Focus = cameraFocus
		cameraFocus = nil

		UserInputService.MouseIconEnabled = mouseIconEnabled
		mouseIconEnabled = nil

		UserInputService.MouseBehavior = mouseBehavior
		mouseBehavior = nil
	end
end

function StartFreecam()
	local cameraCFrame = Camera.CFrame
	cameraRot = Vector2.new(cameraCFrame:toEulerAnglesYXZ())
	cameraPos = cameraCFrame.p
	cameraFov = Camera.FieldOfView

	velSpring:Reset(Vector3.new())
	panSpring:Reset(Vector2.new())
	fovSpring:Reset(0)

	PlayerState.Push()
	RunService:BindToRenderStep("Freecam", Enum.RenderPriority.Camera.Value, StepFreecam)
	Input.StartCapture()
end

function StopFreecam()
	Input.StopCapture()
	RunService:UnbindFromRenderStep("Freecam")
	PlayerState.Pop()
end

------------------------------------------------------------------------

do
	local enabled = false

	function ToggleFreecam()
		if enabled then
			StopFreecam()
		else
			StartFreecam()
		end
		enabled = not enabled
	end

	function CheckMacro(macro)
		for i = 1, #macro - 1 do
			if not UserInputService:IsKeyDown(macro[i]) then
				return
			end
		end
		ToggleFreecam()
	end

	function HandleActivationInput(action, state, input)
		if state == Enum.UserInputState.Begin then
			if input.KeyCode == FREECAM_MACRO_KB[#FREECAM_MACRO_KB] then
				CheckMacro(FREECAM_MACRO_KB)
			end
		end
		return Enum.ContextActionResult.Pass
	end

	ContextActionService:BindActionAtPriority("FreecamToggle", HandleActivationInput, false, TOGGLE_INPUT_PRIORITY, FREECAM_MACRO_KB[#FREECAM_MACRO_KB])
end
--Freecam end

--Command Functions
function getRoot(char)
	local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
	return rootPart
end

function dragify(Frame)
	local dragToggle = nil
	local dragSpeed = 0
	local dragInput = nil
	local dragStart = nil
	local dragPos = nil
	local function updateInput(input)
		local Delta = input.Position - dragStart
		local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
		game:GetService("TweenService"):Create(Frame, TweenInfo.new(0.25), {Position = Position}):Play()
	end
	Frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and UIS:GetFocusedTextBox() == nil then
			dragToggle = true
			dragStart = input.Position
			startPos = Frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)
	Frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	game:GetService("UserInputService").InputChanged:Connect(function(input)
		if input == dragInput and dragToggle then
			updateInput(input)
		end
	end)
end

function PrintNothing(Amount)
	local Second = false
	for _, number in pairs(Amount) do
		wait()
		if Second == false then
			print(" ")
			Second = true
		else
			print("  ")
			Second = false
		end
	end
end

function SendNotification(TitleText, Text, Duration, Button1Text)
	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = TitleText;
		Text = Text;
		Duration = 5;
		Button1 = Button1Text;
	})
end

function MakeNewTextPrint(Text)
	local TextLabel = Instance.new("TextLabel")
	TextLabel.Parent = PrintsFrame
	TextLabel.Size = UDim2.new(0.97,0,0.00001,0)
	TextLabel.TextStrokeTransparency = 0
	TextLabel.TextColor3 = Color3.new(0.176471, 0.176471, 0.176471)
	TextLabel.TextStrokeColor3 = Color3.new(1,1,1)
	TextLabel.Text = Text
	TextLabel.TextScaled = true
	TextLabel.TextWrapped = true
	TextLabel.RichText = true
end

function MakeNewTextCommand(Text)
	local TextLabel = Instance.new("TextLabel")
	TextLabel.Parent = CommandsFrame
	TextLabel.Size = UDim2.new(0.97,0,0.00025,0)
	TextLabel.TextStrokeTransparency = 0
	if Text == "{{{{{{{ ServerSided Commands }}}}}}}" or Text == "{{{{{{{ ClientSided Commands }}}}}}}" then
		TextLabel.TextColor3 = Color3.new(0.54902, 0, 0)
	else
		TextLabel.TextColor3 = Color3.new(0.176471, 0.176471, 0.176471)
	end
	TextLabel.TextStrokeColor3 = Color3.new(1, 1, 1)
	TextLabel.Text = Text
	TextLabel.TextScaled = true
	TextLabel.TextWrapped = true
	TextLabel.RichText = true
	
	--Command List
	local TextLabel = Instance.new("TextLabel")
	TextLabel.Parent = CommandListScrollingFrame
	TextLabel.Size = UDim2.new(0.97,0,0.00025,0)
	TextLabel.TextStrokeTransparency = 0
	if Text == "{{{{{{{ ServerSided Commands }}}}}}}" or Text == "{{{{{{{ ClientSided Commands }}}}}}}" then
		TextLabel.TextColor3 = Color3.new(0.54902, 0, 0)
	else
		TextLabel.TextColor3 = Color3.new(0.176471, 0.176471, 0.176471)
	end
	TextLabel.TextStrokeColor3 = Color3.new(1, 1, 1)
	TextLabel.Text = Text
	TextLabel.TextScaled = true
	TextLabel.TextWrapped = true
	TextLabel.RichText = true
end


function Float(State)
	NotificationSound:Play()
	Floating = State
	local Lower = false
	local Higher = false
	local Torso
	if Player.Character:FindFirstChild("Torso") then
		Torso = Player.Character.Torso
	else
		Torso = Player.Character.UpperTorso
	end
	while Floating == true and IsDead == false do
		local Part = Instance.new("Part")
		Part.Parent = workspace
		Part.Position = Torso.Position
		Part.Anchored = true
		Part.Size = Vector3.new(3,1,3)
		Part.Position=Part.Position-Vector3.new(0,3.53,0)
		if Lower == true then
			Part.Position = Torso.Position
			Part.Position=Part.Position-Vector3.new(0,4,0)
		elseif Higher == true then
			Part.Position = Torso.Position
			Part.Position=Part.Position-Vector3.new(0,3,0)
		end
		Part.Transparency = 1
		wait(0.0001)
		Part:Remove()
		UIS.InputBegan:Connect(function(input)
			if Floating == true and IsTyping == false then
				if input.KeyCode == Enum.KeyCode.Q then
					Lower = true
				end
			end
		end)
		UIS.InputEnded:Connect(function(input)
			if input.KeyCode == Enum.KeyCode.Q then
				Lower = false
			end
		end)

		UIS.InputBegan:Connect(function(input)
			if Floating == true and IsTyping == false then
				if input.KeyCode == Enum.KeyCode.E then
					Higher = true
				end
			end
		end)
		UIS.InputEnded:Connect(function(input)
			if input.KeyCode == Enum.KeyCode.E then
				Higher = false
			end
		end)
	end
end

function Follow(State, Followed)
	NotificationSound:Play()
	Following = State
	while Following == true and IsDead == false do
		wait()
		Player.Character.Humanoid:MoveTo(Followed.Position, Player.Character)
	end
end

function FollowNPC(State, Followed)
	NotificationSound:Play()
	Following = State
	while Following == true and IsDead == false do
		wait()
		Player.Character.Humanoid:MoveTo(Followed.Position, Player.Character)
	end
end

FoundItems = 0
function FoundMore(Model)
	local ModelChildren = Model:GetChildren()
	for _, part in pairs(ModelChildren) do
		wait()
		FoundItems=FoundItems+1
		print(FoundItems..".."..Model:GetFullName().."."..part.Name)
		MakeNewTextPrint(FoundItems..".."..Model:GetFullName().."."..part.Name)
		local OtherChildren = part:GetChildren()
		local Num = 0
		for _, part in pairs(OtherChildren) do Num=Num+1 end
		if Num > 1 then
			FoundMore(part)
		end
	end
end

function FindWorkspace()
	PrintNothing(10)
	NotificationSound2:Play()
	for _, part in pairs(WorkspaceChildren) do
		wait()
		FoundItems=FoundItems+1
		print(FoundItems..".."..part.Name)
		MakeNewTextPrint(FoundItems..".."..part.Name)
		local OtherChildren = part:GetChildren()
		local Num = 0
		for _, part in pairs(OtherChildren) do Num=Num+1 end
		if Num > 1 then
			FoundMore(part)
		end
	end
end

function FoundMoreXray(Model)
	local ModelChildren = Model:GetChildren()
	for _, part in pairs(ModelChildren) do
		if part:IsA("Part") or part:IsA("CornerWedge") or part:IsA("Wedge") or part:IsA("Truss") then
			if part.Name ~= "HumanoidRootPart" then
				part.Transparency = 0.5
			end
		end
		local OtherChildren = part:GetChildren()
		local Num = 0
		for _, part in pairs(OtherChildren) do Num=Num+1 end
		if Num > 1 then
			FoundMoreXray(part)
		end
	end
end

function FoundMoreUnxray(Model)
	local ModelChildren = Model:GetChildren()
	for _, part in pairs(ModelChildren) do
		if part:IsA("Part") or part:IsA("CornerWedge") or part:IsA("Wedge") or part:IsA("Truss") then
			if part.Name ~= "HumanoidRootPart" then
				part.Transparency = 0
			end
		end
		local OtherChildren = part:GetChildren()
		local Num = 0
		for _, part in pairs(OtherChildren) do Num=Num+1 end
		if Num > 1 then
			FoundMoreUnxray(part)
		end
	end
end

function MAXWELLGAME(Model)	
	local ModelChildren = Model:GetChildren()
	for _, part in pairs(ModelChildren) do
		if part:IsA("Part") or part:IsA("CornerWedge") or part:IsA("Wedge") or part:IsA("Truss") then
			local Mesh = Instance.new("SpecialMesh", part)
			Mesh.MeshId = "rbxassetid://11390783129"
			Mesh.TextureId = "rbxassetid://11390783210"
			Mesh.MeshType = Enum.MeshType.FileMesh
			Mesh.Scale = Vector3.new(0.01,0.01,0.01)
		end
		local OtherChildren = part:GetChildren()
		local Num = 0
		for _, part in pairs(OtherChildren) do Num=Num+1 end
		if Num > 1 then
			MAXWELLGAME(part)
		end
	end
end

Clip = nil
function Noclip()
	NotificationSound:Play()
	Clip = false
	wait(0.1)
	local function NoclipLoop()
		if Clip == false and Player.Character ~= nil then
			for _, child in pairs(Player.Character:GetDescendants()) do
				if child:IsA("BasePart") and child.CanCollide == true then
					child.CanCollide = false
				end
			end
		end
	end
	Nocliping = RunService.Stepped:Connect(NoclipLoop)
end

function Unnoclip()
	NotificationSound:Play()
	if Nocliping then
		Nocliping:Disconnect()
	end
	Clip = true
end

function TeleportTo(PlayerTo)
	NotificationSound:Play()
	getRoot(Player.Character).CFrame = PlayerTo.Character.HumanoidRootPart
end

function FlyJump(State)
	NotificationSound:Play()
	FlyJumping = State
	while FlyJumping == true and IsDead == false do
		wait()
		if Player.Character.Humanoid.Jump == true then
			local Part = Instance.new("Part")
			Part.Parent = workspace
			Part.Transparency = 1
			Part.Position = Player.Character.Torso.Position
			Part.Size = Vector3.new(5,1,5)
			Part.Position=Part.Position-Vector3.new(0,4,0)
			wait()
			Part:Remove()
		end
	end
end

function View(State ,Player)
	NotificationSound:Play()
	local Stopped = false
	Viewing = State
	
	if Viewing == false then
		Player = game.Players.LocalPlayer
		workspace.CurrentCamera.CameraSubject = Player.Character.Humanoid
		Stopped = true
	end
	
	for i,v in pairs(Players) do
		local viewing = Player
		workspace.CurrentCamera.CameraSubject = viewing.Character.Humanoid
		
		local function viewDiedFunc()
			if Stopped == false then
				repeat wait() until Player.Character ~= nil and getRoot(Player.Character)
				workspace.CurrentCamera.CameraSubject = viewing.Character.Humanoid
			end
		end
		local viewDied = Player.CharacterAdded:Connect(viewDiedFunc)
		
		local function viewChangedFunc()
			if Stopped == false then
				workspace.CurrentCamera.CameraSubject = viewing.Character.Humanoid
			end
		end
		local viewChanged = workspace.CurrentCamera:GetPropertyChangedSignal("CameraSubject"):Connect(viewChangedFunc)
		
		if viewDied or Stopped == true then
			viewDied:Disconnect()
			viewChanged:Disconnect()
		end
	end
	
	repeat wait() until Viewing == false
	Stopped = true
	if viewDied or viewChanged then
		viewDied:Disconnect()
		viewChanged:Disconnect()
	end
end


function SetSpawn()
	NotificationSound:Play()
	spawnpos = getRoot(Player.Character).CFrame
	SendNotification('Spawn Point','Spawn point created at '..tostring(spawnpos))
end

function PathFindFollow(State ,Plr)
	NotificationSound:Play()
	PathFindFollowing = State
	
	local path = PFS:CreatePath()
	repeat wait()
		local success, response = pcall(function()
			path:ComputeAsync(getRoot(Player.Character).Position, Plr.Position)
			local waypoints = path:GetWaypoints()
			local distance
			for waypointIndex, waypoint in pairs(waypoints) do
				local waypointPosition = waypoint.Position
				Player.Character.Humanoid:MoveTo(waypointPosition)
				repeat
					Player.Character.Humanoid:MoveTo(waypointPosition)
					distance = (waypointPosition - Player.Character.Humanoid.Parent.PrimaryPart.Position).magnitude
					wait()
				until
				distance <= 6
			end	 
		end)
		if not success then
			Player.Character:FindFirstChildOfClass('Humanoid'):MoveTo(Plr.Position)
		end
	until Players == nil or not getRoot(Players) or PathFindFollowing == false
end

function ToolRange(Tool)
	if Tool:FindFirstChild("Handle") then
		NotificationSound:Play()
		Tool.Handle.Size = Vector3.new(1,1,35)
	else
		ErrorSound:Play()
		SendNotification("Error!", "No handle found, please use a different tool!", 5, "Okay")
		MakeNewTextPrint("No handle found, please use a different tool!")
		print("No handle found, please use a different tool!")
	end
end

lplayer = game:GetService("Players").LocalPlayer
flying = false
a = 1
function Fly(State, Number)
	NotificationSound:Play()
	if State == true then
		SendNotification("Note,", "You can noclip by pressing E", 5, "Okay")
	end
	Flying = State

	if Flying == true and IsDead == false then
		if a == 1 then
			repeat wait() until lplayer and lplayer.Character and lplayer.Character:FindFirstChild('HumanoidRootPart') and lplayer.Character:FindFirstChild('Humanoid')
			repeat wait() until Mouse

			local speedfly = Number

			local T = lplayer.Character.HumanoidRootPart
			local CONTROL = {F = 0, B = 0, L = 0, R = 0}
			local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
			local SPEED = speedfly

			local function fly()
				flying = true
				local BG = Instance.new('BodyGyro', T)
				local BV = Instance.new('BodyVelocity', T)
				BG.P = 9e4
				BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
				BG.cframe = T.CFrame
				BV.velocity = Vector3.new(0, 0.1, 0)
				BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
				spawn(function()
					repeat wait()
						lplayer.Character.Humanoid.PlatformStand = true
						if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
							SPEED = 50
						elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
							SPEED = 0
						end
						if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
							BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
							lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
						elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
							BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
						else
							BV.velocity = Vector3.new(0, 0.1, 0)
						end
						BG.cframe = workspace.CurrentCamera.CoordinateFrame
					until not flying
					CONTROL = {F = 0, B = 0, L = 0, R = 0}
					lCONTROL = {F = 0, B = 0, L = 0, R = 0}
					SPEED = 0
					BG:destroy()
					BV:destroy()
					lplayer.Character.Humanoid.PlatformStand = false
				end)
			end
			Mouse.KeyDown:connect(function(KEY)
				if KEY:lower() == 'w' then
					CONTROL.F = speedfly
				elseif KEY:lower() == 's' then
					CONTROL.B = -speedfly
				elseif KEY:lower() == 'a' then
					CONTROL.L = -speedfly
				elseif KEY:lower() == 'd' then
					CONTROL.R = speedfly
				end
			end)
			Mouse.KeyUp:connect(function(KEY)
				if KEY:lower() == 'w' then
					CONTROL.F = 0
				elseif KEY:lower() == 's' then
					CONTROL.B = 0
				elseif KEY:lower() == 'a' then
					CONTROL.L = 0
				elseif KEY:lower() == 'd' then
					CONTROL.R = 0
				end
			end)
			a = 0
			fly()
		else 
			flying = false
			lplayer.Character.Humanoid.PlatformStand = false
			a = 1
		end
		wait()

		local noclip = false
		local player = game.Players.LocalPlayer
		local character = player.Character
		local mouse = player:GetMouse()
		mouse.KeyDown:Connect(function(key)
			if key == "e" then
				noclip = not noclip
			end
		end)
		while Flying == true and IsDead == false do
			player = game.Players.LocalPlayer
			character = player.Character
			if noclip then
				for _, v in pairs(character:GetDescendants()) do
					pcall(function()
						if v:IsA("BasePart") then
							v.CanCollide = false
						end
					end)
				end
			end
			game:GetService("RunService").Stepped:wait()
		end
	else
		flying = false
		a = 0
	end
end

function Funny(State)
	Funnying = State
	FunnyNotificationSound:Play()
	while Funnying == true and IsDead == false do
		wait()
		if R15 == true then
			Player.Character.Torso.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			Player.Character.LeftHand.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			Player.Character.LeftUpperArm.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			Player.Character.LeftLowerArm.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			Player.Character.RightHand.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			Player.Character.RightUpperArm.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			Player.Character.RightLowerArm.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			Player.Character.LeftFoot.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			Player.Character.LeftUpperLeg.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			Player.Character.LeftLowerLeg.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			Player.Character.RightFoot.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			Player.Character.RightUpperLeg.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			Player.Character.RightLowerLeg.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
		else
			Player.Character.Torso.Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			Player.Character["Right Arm"].Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			Player.Character["Left Arm"].Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			Player.Character["Right Leg"].Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
			Player.Character["Left Leg"].Orientation = Vector3.new(math.random(1,360),math.random(1,360),math.random(1,360))
		end
	end
end

function Funny2(State)
	FunnyNotificationSound:Play()
	Funnying2 = State
	while Funnying2 == true and IsDead == false do
		for i=1,40 do
			wait()
			Player.Character.Head.Size=Player.Character.Head.Size+Vector3.new(0.1,0.1,0.1)
		end
		for i=1,40 do
			wait()
			Player.Character.Head.Size=Player.Character.Head.Size-Vector3.new(0.1,0.1,0.1)
		end
	end
end

function RemoveHats()
	NotificationSound:Play()
	local CharC = Player.Character:GetChildren()

	for _, item in pairs(CharC) do
		if item:IsA("Accessory") or item:IsA("Hat") then
			item.Handle.Transparency = 1
		end
	end
end

function RestoreHats()
	NotificationSound:Play()
	local CharC = Player.Character:GetChildren()

	for _, item in pairs(CharC) do
		if item:IsA("Accessory") or item:IsA("Hat") then
			item.Handle.Transparency = 0
		end
	end
end

function Funny3(State, Number)
	FunnyNotificationSound:Play()
	Funnying3 = State
	while Funnying3 == true and IsDead == false do
		wait()
		Player.Character.Torso.Orientation = Vector3.new(Number,0,0)
	end
end

function Spin(State, Number)
	NotificationSound:Play()
	Spinning = State
	for _, child in pairs(Player.Character:GetDescendants()) do
		if child:IsA("BasePart") then
			child.CustomPhysicalProperties = PhysicalProperties.new(math.huge, 0.3, 0.5)
		end
	end

	wait(.1)
	local bambam = Instance.new("BodyAngularVelocity")
	bambam.Name = "idk"
	bambam.Parent = getRoot(Player.Character)
	bambam.AngularVelocity = Vector3.new(0,9999999,0)
	bambam.MaxTorque = Vector3.new(0,math.huge,0)
	bambam.P = math.huge
	local Char = Player.Character:GetChildren()
	for i, v in next, Char do
		if v:IsA("BasePart") then
			v.CanCollide = false
			v.Massless = true
			v.Velocity = Vector3.new(0, 0, 0)
		end
	end

	repeat
		bambam.AngularVelocity = Vector3.new(0,Number,0)
		wait()
		bambam.AngularVelocity = Vector3.new(0,0,0)
		wait()
	until Spinning == false
	bambam:Remove()
	getRoot(Player.Character).Orientation = Vector3.new(0,0,0)
end

function Fling(State)
	Flinging = State
	for _, child in pairs(Player.Character:GetDescendants()) do
		if child:IsA("BasePart") then
			child.CustomPhysicalProperties = PhysicalProperties.new(math.huge, 0.3, 0.5)
		end
	end

	wait(.1)
	local bambam = Instance.new("BodyAngularVelocity")
	bambam.Name = "idk"
	bambam.Parent = getRoot(Player.Character)
	bambam.AngularVelocity = Vector3.new(0,9999999,0)
	bambam.MaxTorque = Vector3.new(0,math.huge,0)
	bambam.P = math.huge
	local Char = Player.Character:GetChildren()
	for i, v in next, Char do
		if v:IsA("BasePart") then
			v.CanCollide = false
			v.Massless = true
			v.Velocity = Vector3.new(0, 0, 0)
		end
	end

	if Flinging == true then
		Noclip()
	else
		Unnoclip()
	end
	repeat
		getRoot(Player.Character).Orientation = Vector3.new(0,0,0)
		bambam.AngularVelocity = Vector3.new(0,999999999999999999999999,0)--999999999999
		getRoot(Player.Character).Orientation = Vector3.new(0,0,0)
		wait(.2)
		getRoot(Player.Character).Orientation = Vector3.new(0,0,0)
		--bambam.AngularVelocity = Vector3.new(0,0,0)
		wait(.1)
	until Flinging == false
	bambam:Remove()
end

function HideGui(State)
	NotificationSound:Play()
	local PlayerGui = Player.PlayerGui:GetChildren()
	if State == true and IsDead == false then
		for _, ui in pairs(PlayerGui) do
			if ui:IsA("ScreenGui") then
				if ui.Name ~= "Chat" then
					ui.Enabled = false
				end
			end
			MainGui.Enabled = true
		end
	else
		for _, ui in pairs(PlayerGui) do
			if ui:IsA("ScreenGui") then
				ui.Enabled = true
			end
			MainGui.Enabled = true
		end
	end
end

--0,0.2,0.7
function Headsit(PlayerTo)
	if headSit then headSit:Disconnect() end
	NotificationSound:Play()
	Player.Character.Humanoid.Sit = true

	while Player.Character.Humanoid.Sit == true and IsDead == false do
		wait()
		headSit = RunService.Heartbeat:Connect(function()
			if Player.Character.Humanoid.Sit == true then
				getRoot(Player.Character).CFrame = getRoot(PlayerTo.Character).CFrame * CFrame.Angles(0,math.rad(0),0)* CFrame.new(0,1.6,0.4)
			else
				headSit:Disconnect()
			end
		end)
	end
end

function HeadStand(PlayerTo)
	if headStand then headStand:Disconnect() end
	NotificationSound:Play()
	Player.Character.Humanoid.PlatformStand = true

	while Player.Character.Humanoid.PlatformStand == true and IsDead == false do
		wait()
		headStand = RunService.Heartbeat:Connect(function()
			if Player.Character.Humanoid.Jump == false then
				getRoot(Player.Character).CFrame = getRoot(PlayerTo.Character).CFrame * CFrame.Angles(0,math.rad(0),0)* CFrame.new(0,5,0)
			else
				headStand:Disconnect()
			end
		end)
	end
end

function Tpwalk(State, Number)
	local Speed
	NotificationSound:Play()
	Tpwalking = State

	local hb = RunService.Heartbeat
	while Tpwalking == true and IsDead == false do
		wait()
		local delta = hb:Wait()
		if Player.Character.Humanoid.MoveDirection.Magnitude > 0 then
			Player.Character:TranslateBy(Player.Character.Humanoid.MoveDirection * tonumber(Number) * delta * 10)
			Player.Character:TranslateBy(Player.Character.Humanoid.MoveDirection * delta * 10)
		end
	end
end

function Funny4(State, Number)
	NotificationSound:Play()
	Funnying4 = State
	while Funnying4 == true and IsDead == false do
		wait()
		if Player.Character:FindFirstChild("Torso") then
			local Torso = Player.Character:FindFirstChild("Torso")
			Torso.CFrame = Torso.CFrame * CFrame.fromEulerAnglesXYZ((Number),(Number),(Number))
		else
			local Torso = Player.Character:FindFirstChild("UpperTorso")
			Torso.CFrame = Torso.CFrame * CFrame.fromEulerAnglesXYZ((Number),(Number),(Number))
		end
	end
end

function ConstantFov(State, Number)
	ConstantFoving = State

	while ConstantFoving == true do wait()
		Camera.FieldOfView = Number
	end
end

function ConstantSpeed(State, Number)
	ConstantSpeeding = State
	
	while ConstantSpeeding == true do wait()
		Player.Character.Humanoid.WalkSpeed = Number
	end
end

function ConstantJumpPower(State, Number)
	ConstantJumpPowering = State

	while ConstantJumpPowering == true do wait()
		Player.Character.Humanoid.JumpPower = Number
	end
end

function AutoJump(State)
	AutoJumping = State
	
	while AutoJumping == true do wait()
		Player.Character.Humanoid.Jump = true
	end
end

DefultAtmoColor = nil
DefultAtmoDecay = nil
DefultAtmoDensity = nil
DefultFogColor = nil
DefultFogEnd = nil
if game.Lighting:FindFirstChildOfClass("Atmosphere") then
	DefultAtmoColor = game.Lighting:FindFirstChildOfClass("Atmosphere").Color
	DefultAtmoDecay = game.Lighting:FindFirstChildOfClass("Atmosphere").Decay
	DefultAtmoDensity = game.Lighting:FindFirstChildOfClass("Atmosphere").Density
else
	DefultFogColor = game.Lighting.FogColor
	DefultFogEnd = game.Lighting.FogEnd
end
DefultBrightness = game.Lighting.Brightness
DefultAmbientColor = game.Lighting.Ambient
DefultOutdoorAmbient = game.Lighting.OutdoorAmbient
RespawnPos = Instance.new("StringValue", nil)
--Chatted commands
CommandBar.FocusLost:Connect(function()
	local message = CommandBar.Text:lower()

	if message == "endscript" then
		pcall(function()
			getgenv().CURRENT_FC_ENDED = true
			MainGui:Remove()
			warn("Furs commands has ended succesfuly")
		end)
	end
	
	if message == "showplayerlist" or message == "playerlist" then
		NotificationSound:Play()
		PlayerListFrame.Visible = true
	elseif message == "hideplayerlist" or message == "unplayerlist" then
		NotificationSound:Play()
		PlayerListFrame.Visible = false
	end
	
	if message == "reduselag" or message == "lesslag" then
		local Lighting = game.Lighting:GetChildren()
		for _, instance in pairs(Lighting) do
			instance:Remove()
		end
	end
	
	if message == "secretcommand" then
		warn("there is nothing here lol")
	end
	
	if message == "maxwell" then
		NotificationSound2:Play()
		MAXWELLGAME(Workspace)
	end
	
	if message == "cmds" or message == "commands" then
		NotificationSound:Play()
		CommandListFrame.Visible = true
	end
	
	if message == "vr" then
		SendNotification("Wait..", "Fe Vr is loading..", 5, nil)
		loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/vr.lua"))()
	end

	if message == "showspamchat" or message == "spamchat" then
		NotificationSound:Play()
		FakeChatFrame.Visible = true
	elseif message == "hidespamchat" or message == "unspamchat" then
		NotificationSound:Play()
		FakeChatFrame.Visible = false
	end
	
	if message:find("play") then
		NotificationSound:Play()
		local SplitMessage = message:split("play ")
		if SplitMessage[2] then
			local Sound = Instance.new("Sound", MusicFolder)
			Sound.SoundId = "rbxassetid://"..SplitMessage[2]
			Sound.Looped = true
			Sound.Volume = 0.5
			Sound.Playing = true
			SendNotification("Playing;", SplitMessage[2], 5, nil)
		end
	end
	
	if message == "stop" then
		NotificationSound:Play()
		local c = MusicFolder:GetChildren()
		for _, Sound in pairs(c) do
			Sound:Remove()
		end
	end

	if message == "day" then
		NotificationSound:Play()
		game.Lighting.TimeOfDay = "14:00:00"
	elseif message == "night" then
		NotificationSound:Play()
		game.Lighting.TimeOfDay = "0:00:00"
	end

	if message == "light" then
		NotificationSound:Play()
		local Light = Instance.new("PointLight", Player.Character.HumanoidRootPart)
		Light.Brightness = 2
		Light.Range = 60
	elseif message == "unlight" then
		NotificationSound:Play()
		if Player.Character.HumanoidRootPart:FindFirstChild("PointLight") then
			Player.Character.HumanoidRootPart.PointLight:Remove()
		end
	end

	if message == "nightvision" then
		NightVisionSound:Play()
		NightVisionUi.Visible = true
		game.Lighting.Brightness=game.Lighting.Brightness+7
		game.Lighting.Ambient = Color3.fromRGB(0, 124, 21)
		game.Lighting.OutdoorAmbient = Color3.fromRGB(0, 124, 21)

		if game.Lighting:FindFirstChildOfClass("Atmosphere") then
			game.Lighting:FindFirstChildOfClass("Atmosphere").Color = Color3.new(0,0,0)
			game.Lighting:FindFirstChildOfClass("Atmosphere").Decay = Color3.new(0,0,0)
			game.Lighting:FindFirstChildOfClass("Atmosphere").Density = 1
			for i=1,10 do
				wait()
				game.Lighting:FindFirstChildOfClass("Atmosphere").Density=game.Lighting:FindFirstChildOfClass("Atmosphere").Density-0.1
			end
		else
			game.Lighting.FogColor = Color3.fromRGB(0,0,0)
			game.Lighting.FogEnd = 0
			for i=1,100 do
				wait()
				game.Lighting.FogEnd=game.Lighting.FogEnd+10
			end
			game.Lighting.FogColor = DefultFogColor
		end
	elseif message == "unnightvision" then
		NightVisionSound:Play()
		NightVisionUi.Visible = false
		game.Lighting.Brightness = DefultBrightness
		game.Lighting.Ambient = DefultAmbientColor
		game.Lighting.OutdoorAmbient = DefultOutdoorAmbient

		if game.Lighting:FindFirstChildOfClass("Atmosphere") then
			game.Lighting:FindFirstChildOfClass("Atmosphere").Color = Color3.new(0,0,0)
			game.Lighting:FindFirstChildOfClass("Atmosphere").Decay = Color3.new(0,0,0)
			game.Lighting:FindFirstChildOfClass("Atmosphere").Density = 1
			for i=1,10 do
				wait()
				game.Lighting:FindFirstChildOfClass("Atmosphere").Density=game.Lighting:FindFirstChildOfClass("Atmosphere").Density-0.1
			end
		else
			game.Lighting.FogColor = Color3.fromRGB(0,0,0)
			game.Lighting.FogEnd = 0
			for i=1,100 do
				wait()
				game.Lighting.FogEnd=game.Lighting.FogEnd+10
			end
			game.Lighting.FogEnd = DefultFogEnd
			game.Lighting.FogColor = DefultFogColor
		end
	end

	if message == "hidemain" then
		NotificationSound:Play()
		MainFrame.Visible = false
		SendNotification("Note", "Type showmain to make ui visible", 5, "Okay")
	elseif message == "showmain" then
		NotificationSound:Play()
		MainFrame.Visible = true
	end

	if message == "newestversion" or message == "checkversion" then
		NotificationSound:Play()
		MakeNewTextPrint("Newest version is V"..NewestVersion)
		MakeNewTextPrint("You are currently using V"..ScriptVersion.." ("..ScriptVersionCreationDate..")")
		SendNotification("Newest version", "V"..NewestVersion, 5, "Okay")
		wait(2.5)
		if ScriptVersion == NewestVersion then
			SendNotification("Current script version", "You are up to date! (V"..ScriptVersion.."["..ScriptVersionCreationDate.."])", 5, "Okay")
		else
			SendNotification("Current script version", "(V"..ScriptVersion.."["..ScriptVersionCreationDate.."] {type getnew to get newest version,})", 5, "Okay")
		end
	end

	if message == "respawn" then
		DiedSound:Play()
		RespawnPos = getRoot(Player.Character).CFrame
		getRoot(Player.Character).CFrame = CFrame.new(Vector3.new(0,-470,0))
		wait(1)
		local IsRespawning = true
		while IsRespawning == true do
			wait()
			Player.CharacterAdded:Connect(function()
				wait(0.1)
				if IsRespawning == true then
					IsRespawning = false
					wait(1.5)
					getRoot(Player.Character).CFrame = RespawnPos
					RespawnPos = nil
				end
			end)
		end
		SendNotification("Respawned", "You may continue of whatever you were doing", 5, "Okay")
	end

	if message == "getnew" then
		NotificationSound:Play()
		SendNotification("How to see steps", "Press F9 on your keyboard or type '/console' in chat or go to 'PRINTS' in your command ui", 30, "Okay")
		print([[
		How to get newest version:
		Step 1; Go to github.com in your browser (Create an account if needed)
		Step 2; Go to the top left corner and type in "0110" and click "All Github"
		Step 3; Move down to the bottom left and click "Users"
		Step 4; Click on user named "Puro paperbox (0110Doe)"
		Step 5; Click "Repositories" then click "Furs-Commands-Roblox-Script"
		Step 6; Scroll down until you see the newest version that is showed (Make sure it doesnt say (old [Test])
		Step 7; Click on the newest version file and press "Raw"
		Step 8; Go to the search bar of your browser and copy the link (Ctrl+C)
		Step 9; Move to your executor and type in "loadstring(game:HttpGet('[LINK (Ctrl+V)]',true))()"
		Step 10; Go back to roblox and type "rejoin" and then execute the newest version!
	]])
		MakeNewTextPrint("How to get newest version:")
		MakeNewTextPrint("Step 1; Go to github.com in your browser (Create an account if needed)")
		MakeNewTextPrint("Step 2; Go to the top left corner and type in '0110' and click 'All Github'")
		MakeNewTextPrint("Step 3; Move down to the bottom left and click 'Users'")
		MakeNewTextPrint("Step 4; Click on user named 'Puro paperbox (0110Doe)'")
		MakeNewTextPrint("Step 5; Click 'Repositories' then click 'Furs-Commands-Roblox-Script'")
		MakeNewTextPrint("Step 6; Scroll down until you see the newest version that is showed (Make sure it doesnt say (old [Test])")
		MakeNewTextPrint("Step 7; Click on the newest version file and click 'Raw'")
		MakeNewTextPrint("Step 8; Go to the search bar of your browser and copy the link (Ctrl+C)")
		MakeNewTextPrint("Step 9; Move to your executor and type in 'loadstring(game:HttpGet('[LINK (Ctrl+V)]',true))()")
		MakeNewTextPrint("Step 10; Go back to roblox and type 'endscript' and then execute the newest version!")
	end
	
	if message == "autojump" then
		AutoJump(true)
	elseif message == "unautojump" then
		AutoJump(false)
	end
	
	if message == "rejoin" then
		local TeleportService = game:GetService("TeleportService")
		TeleportService:Teleport(game.PlaceId, Player)
	end

	if message == "fixgui" then
		NotificationSound:Play()
		MainFrame.Position = UDim2.new(0.5,0,0.5,0)
		FakeChatFrame.Position = UDim2.new(0.5,0,0.5,0)
	end

	if message == "bighead" then
		NotificationSound:Play()
		Player.Character.Head.Size = Vector3.new(5,5,5)
	elseif message == "smallhead" then
		NotificationSound:Play()
		Player.Character.Head.Size = Vector3.new(0.3,0.3,0.3)
	elseif message == "normalhead" then
		NotificationSound:Play()
		Player.Character.Head.Size = Vector3.new(2, 1, 1)
	end

	if message == "toolrange" then
		local charChildren = Player.Character:GetChildren()
		local FoundTool = false
		local Tool = nil
		for _, item in pairs(charChildren) do
			if item:IsA("Tool") then
				FoundTool = true
				Tool = item
			end
		end

		if FoundTool == true and Tool ~= nil then
			ToolRange(Tool)
		else
			ErrorSound:Play()
			SendNotification("Error!", "Please equip a tool for command to work!", 5, "Okay")
			MakeNewTextPrint("Please equip a tool for command to work!")
			print("Please equip a tool for command to work!")
		end
	end

	if message == "partxray" then
		NotificationSound:Play()
		for _, instance in pairs(WorkspaceChildren) do
			if instance:IsA("Part") then
				if instance.Name ~= "HumanoidRootPart" then
					instance.Transparency = 0.5
				end
			end
			local OtherChildren = instance:GetChildren()
			local Num = 0
			for _, part in pairs(OtherChildren) do Num=Num+1 end
			if Num > 1 then
				FoundMoreXray(instance)
			end
		end
	elseif message == "unpartxray" then
		NotificationSound:Play()
		for _, instance in pairs(WorkspaceChildren) do
			if instance:IsA("Part") then
				if instance.Name ~= "HumanoidRootPart" then
					instance.Transparency = 0
				end
			end
			local OtherChildren = instance:GetChildren()
			local Num = 0
			for _, part in pairs(OtherChildren) do Num=Num+1 end
			if Num > 1 then
				FoundMoreUnxray(instance)
			end
		end
	end

	if message == "findWorkspace" then
		FindWorkspace()
		wait(0.1)
		print("Found a total of "..FoundItems.." items!")
		if FoundItems == 0 then
			MakeNewTextPrint("!!!No items found!!!")
		end
		FoundItems=0
	end

	if message == "clearprints" then
		NotificationSound:Play()
		local C = PrintsFrame:GetChildren()
		local Total = 0
		for _, textlabel in pairs(C) do
			wait()
			if textlabel:IsA("TextLabel") then
				textlabel:Remove()
				Total=Total+1
			end
		end
		print("Removed "..Total.." prints!")
		MakeNewTextPrint("Removed "..Total.." prints!")
		wait(5)
		PrintsFrame:FindFirstChild("TextLabel"):Remove()
	end

	if message == "sit" then
		NotificationSound:Play()
		Player.Character.Humanoid.Sit = true
	end

	for _,Plr in pairs(Players) do
		if message:find("follow") and not message:find("unfollow") and not message:find("pathfindfollow") and not message:find("unpathfindfollow") and not message:find("followpart") and not message:find("unfollowpart") then
			local Name = message:split("follow ")
			
			if Plr.Name:lower():find(Name[2]:lower()) or Plr.DisplayName:lower():find(Name[2]:lower()) then
				Follow(true, getRoot(Plr.Character))
			end
		elseif message:find("pathfindfollow") and not message:find("unpathfindfollow") and not message:find("follow") and not message:find("unfollow") and not message:find("followpart") and not message:find("unfollowpart") then
			local Name = message:split("pathfindfollow ")
			
			if Plr.Name:lower():find(Name[2]:lower()) or Plr.DisplayName:lower():find(Name[2]:lower()) then
				PathFindFollow(true, getRoot(Plr.Character))
			end
		elseif message:find("to") and not message:find("stop") and not message:find("restorehats") and not message:find("toolrange") then
			local Name = message:split("to ")
			
			if Plr.Name:lower():find(Name[2]:lower()) or Plr.DisplayName:lower():find(Name[2]:lower()) then
				TeleportTo(Plr)
			end
		elseif message:find("headsit") then
			local Name = message:split("headsit ")
			
			if Plr.Name:lower():find(Name[2]:lower()) or Plr.DisplayName:lower():find(Name[2]:lower()) then
				Headsit(Plr)
			end
		elseif message:find("headstand") then
			local Name = message:split("headstand ")
			
			if Plr.Name:lower():find(Name[2]:lower()) or Plr.DisplayName:lower():find(Name[2]:lower()) then
				HeadStand(Plr)
			end
		elseif message:find("view") and not message:find("unview") then
			local Name = message:split("view ")
			if Plr.Name:lower():find(Name[2]:lower()) or Plr.DisplayName:lower():find(Name[2]:lower()) then
				View(true, Plr)
			end
		end
	end
	
	if message == "unpathfindfollow" then
		PathFindFollow(false, nil)
	elseif message == "unview" then
		View(false, nil)
	elseif message == "unfollow" then
		Follow(false, nil)
	end

	for _, instance in pairs(WorkspaceChildren) do
		if message == "followpart "..instance.Name then
			local FollowedTorso
			if instance:FindFirstChild("HumanoidRootPart") then
				FollowedTorso = instance:FindFirstChild("HumanoidRootPart")
			end
			FollowNPC(true, FollowedTorso)
		elseif message == "unfollowpart" then
			FollowNPC(false, nil)
		end
	end

	if message == "firstperson" then
		NotificationSound:Play()
		Player.CameraMode = Enum.CameraMode.LockFirstPerson
	elseif message == "unfirstperson" then
		NotificationSound:Play()
		Player.CameraMode = Enum.CameraMode.Classic
	end

	if message == "fling" then
		Fling(true)
	elseif message == "unfling" then
		Fling(false)
	end

	for i=1,10000 do
		if message == "speed "..i then
			NotificationSound:Play()
			Player.Character.Humanoid.WalkSpeed = i
		elseif message == "jumppower "..i then
			NotificationSound:Play()
			Player.Character.Humanoid.JumpPower = i
		elseif message == "fly "..i then
			Fly(true, i)
		elseif message == "funny3 "..i then
			Funny3(true, i)
		elseif message == "spin "..i then
			Spin(true, i)
		elseif message == "tpwalk "..i then
			Tpwalk(true, i)
		elseif message == "funny4 "..i then
			Funny4(true, i)
		elseif message == "fov "..i then
			NotificationSound:Play()
			Camera.FieldOfView = i
		elseif message == "brightness "..i then
			NotificationSound:Play()
			game.Lighting.Brightness = i
		elseif message == "constantfov "..i then
			ConstantFov(true, i)
		elseif message == "constantspeed "..i then
			ConstantSpeed(true, i)
		elseif message == "constantjumppower" then
			ConstantJumpPower(true, i)
		elseif message == "fogend "..i then
			NotificationSound:Play()
			game.Lighting.FogEnd = i
		elseif message == "fogcolor "..i then
			NotificationSound:Play()
			game.Lighting.FogColor = BrickColor.new(i).Color
		end
	end

	if message == "fly" then
		Fly(true, 2)
	elseif message == "unfly" then
		Fly(false, 0)
	elseif message == "spin" then
		Spin(true, 50)
	elseif message == "unspin" then
		Spin(false, 0)
	elseif message == "tpwalk" then
		Tpwalk(true, 2.5)
	elseif message == "untpwalk" then
		Tpwalk(false, 0)
	elseif message == "unconstantfov" then
		ConstantFov(false, 70)
	end

	if message == "hidegui" then
		HideGui(true)
	elseif message == "showgui" then
		HideGui(false)
	end

	if message == "removehats" then
		RemoveHats()
	elseif message == "restorehats" then
		RestoreHats()
	end

	if message == "funny" then
		Funny(true)
	elseif message == "unfunny" then
		Funny(false)
	end

	if message == "funny2" then
		Funny2(true)
	elseif message == "unfunny2" then
		Funny2(false)
	end

	if message == "setspawn" then
		SetSpawn()
	end

	if message == "flyjump" then
		FlyJump(true)
	elseif message == "unflyjump" then
		FlyJump(false)
	end

	if message == "noclip" then
		Noclip()
	elseif message == "unnoclip" then
		Unnoclip()
	end

	if message == "float" then
		Float(true)
	elseif message == "unfloat" then
		Float(false)
	end

	if message == "hideprints" then
		PrintNothing(600)
	end
end)

function StopCommands()
	Follow(false, nil)
	FollowNPC(false, nil)
	Float(false)
	FlyJump(false)
	Fly(false , 0)
	Funny(false)
	Funny2(false)
	Funny3(false, 0)
	Funny4(false, 0)
	Tpwalk(false, 0)
end

Player.Character.Humanoid.Died:Connect(function()
	IsDead = true
	while IsDead == true do
		wait()
		Player.CharacterAdded:Connect(function()
			IsDead = false
		end)
	end
end)

Player.CharacterRemoving:Connect(function()
	SendNotification("Please wait,", "Stuff are loading..", 5, "Okay")
	StopCommands()

	local IsRespawning = true
	while IsRespawning == true do
		wait()
		Player.CharacterAdded:Connect(function()
			IsRespawning = false
			if spawnpos ~= nil then
				wait(0.5)
				getRoot(Player.Character).CFrame = spawnpos
			end
		end)
	end

	--Char = Player.Character
	--Head = Char.Head
	--if Char:FindFirstChild("UpperTorso") then
	--	Torso = Char.UpperTorso
	--	LowerTorso = Char.LowerTorso
	--	UpperLeftArm = Char.LeftUpperArm
	--	LowerLeftArm = Char.LeftLowerArm
	--	LeftHand = Char.LeftHand
	--	UpperRightArm = Char.RightUpperArm
	--	LowerRightArm = Char.RightLowerArm
	--	RightHand = Char.RightHand
	--	UpperLeftLeg = Char.LeftUpperLeg
	--	LowerLeftLeg = Char.LeftLowerLeg
	--	LeftFoot = Char.LeftFoot
	--	UpperRightLeg = Char.RightUpperLeg
	--	LowerRightLeg = Char.RightLowerLeg
	--	RightFoot = Char.RightFoot
	--	R15 = true
	--elseif Char:FindFirstChild("Torso") then
	--	Torso = Char.Torso
	--	RightArm = Char["Right Arm"]
	--	LeftArm = Char["Left Arm"]
	--	RightLeg =  Char["Right Leg"]
	--	LeftLeg = Char["Left Leg"]
	--	R15 = false
	--end
end)

for _, cmd in pairs(cmds) do
	TotalCommands=TotalCommands+1
	MakeNewTextCommand(cmd)
end
TotalCommands=TotalCommands-2
MakeNewTextPrint("There is a total of "..TotalCommands.." commands! (V"..ScriptVersion..")")
print("There is a total of "..TotalCommands.." commands! (V"..ScriptVersion..")")

dragify(MainFrame)
dragify(FakeChatFrame)
dragify(CommandListFrame)
dragify(PlayerListFrame)
MainGui.Enabled = true

WhileWaitEvent.Event:Connect(function()
	while wait(1) do
		TimeUsedScript=TimeUsedScript+1
		TimeUsingScript.Text = "You have been using this script for "..TimeUsedScript.." seconds"
	end
end)

WhileWaitEvent:Fire()
LoadedSound:Play()
SendNotification("Script loaded!", "There is currently "..TotalCommands.." commands, Have fun!", 5, "Okay!")
wait(2)
SendNotification("Important!", "If you lose the ui type fixgui", 15, "Noted")
